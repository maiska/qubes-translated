# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, test
# This file is distributed under the same license as the qubes-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: qubes-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-15 21:10+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../developer/system/storage-pools.md:9
#: ccd40f377eba4848931c318ee67153b4
msgid "Qubes OS R3.2 introduced the concept of storage drivers and pools.  This feature was a first step towards a saner storage API, which is heavily rewritten in R4. See [here](https://dev.qubes-os.org/projects/core-admin/en/latest/qubes-storage.html) for documentation on storage pools in R4."
msgstr ""

#: ../developer/system/storage-pools.md:14
#: 0e2f35ee4247483b80b4b0b50fd91373
msgid "A storage driver provides a way to store VM images in a Qubes OS system. Currently, the default driver is `xen` which is the default way of storing volume images as files in a directory tree like `/var/lib/qubes/`."
msgstr ""

#: ../developer/system/storage-pools.md:18
#: 08865d4b3b0f42198c4737b9068d3528
msgid "A storage pool driver can be identified either by the driver name with the `driver` key or by the class name like this: `class=qubes.storage.xen.XenStorage`. Because R3.2 doesn't use Python `setup_hooks`, to actually use a short driver name for a custom storage driver, you have to patch `qubes-core-admin`. You can use the `class` config key instead, when your class is accessible by `import` in Python."
msgstr ""

#: ../developer/system/storage-pools.md:25
#: 2e7a9a0c60a34142b640a03f48fcd470
msgid "A pool (in R3.2) is configuration information which can be referenced when creating a new VM. Each pool is saved in `storage.conf`. It has a name, a storage driver and some driver specific configuration attached."
msgstr ""

#: ../developer/system/storage-pools.md:29
#: 93f5e6fdb87f4c7c8d5cab963e5de73e
msgid "When installed, the system has, as you can see from the contents of `/etc/qubes/storage.conf`, a pool named `default`. It uses the driver `xen`. The default pool is special in R3.2. It will add `dir_path=/var/lib/qubes` configuration value from `defaults[pool_config]`, if not overwritten."
msgstr ""

#: ../developer/system/storage-pools.md:34
#: c432c16268004c69accc344fc04ed795
msgid "Currently the only supported driver out of the box is `xen`. The benefit of pools (besides that you can write your own storage driver e.g. for Btrfs) in R3.2 is that you can store your domains in multiple places."
msgstr ""

#: ../developer/system/storage-pools.md:38
#: 263a931c6699498caddfebb6e132be35
msgid "You can add a pool to `storage.conf` like this:"
msgstr ""

#: ../developer/system/storage-pools.md:46
#: 4093dd51c4944a1b9e18141b494e7bd2
msgid "Now, when creating a new VM on the command-line, you may pass the `-Pfoo` argument to `qvm-create` to have the VM images stored in pool `foo`. See also `qvm-create --help`."
msgstr ""

#: ../developer/system/storage-pools.md:50
#: 3605cf4c050e47e6a4417571c2f41bc3
msgid "While the current API is not as clean and beautiful as the R4 API, it allows you to write your own storage drivers e.g. for Btrfs today."
msgstr ""
