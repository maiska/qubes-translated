# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, test
# This file is distributed under the same license as the qubes-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: qubes-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-15 21:10+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../developer/debugging/automated-tests.md:12
#: d9680f38d42545969d473f3e793d18fd
msgid "Unit and Integration Tests"
msgstr ""

#: ../developer/debugging/automated-tests.md:14
#: 03ae04e9fb7643aba20392fd97db9b7e
msgid "Starting with Qubes R3 we use [python unittest](https://docs.python.org/3/library/unittest.html) to perform automatic tests of Qubes OS. Despite the name, we use it for both [unit tests](https://en.wikipedia.org/wiki/Unit_tests) and [integration tests](https://en.wikipedia.org/wiki/Integration_tests). The main purpose is, of course, to deliver much more stable releases."
msgstr ""

#: ../developer/debugging/automated-tests.md:18
#: 6dbf507954d04baf9e8cda77ae8b3737
msgid "The integration tests must be run in dom0, but some unit tests can run inside a VM as well."
msgstr ""

#: ../developer/debugging/automated-tests.md:20
#: 772750638e49429693dd083e52489c42
msgid "Integration & unit testing in dom0"
msgstr ""

#: ../developer/debugging/automated-tests.md:22
#: e0bd6e5b11944cb4a54a68cde97408c2
msgid "Integration tests are written with the assumption that they will be executed on dedicated hardware and must be run in dom0. All other unit tests can also be run in dom0."
msgstr ""

#: ../developer/debugging/automated-tests.md:24
#: a6219f52d5d44a6580949026a8d85cba
msgid "**Do not run the tests on installations with important data, because you might lose it.**"
msgstr ""

#: ../developer/debugging/automated-tests.md:26
#: bc608e9ddaf44f4fbe7282dc132692cf
msgid "All the VMs with a name starting with `test-` on the installation are removed during the process, and all the tests are recklessly started from dom0, even when testing (& possibly breaking) VM components."
msgstr ""

#: ../developer/debugging/automated-tests.md:28
#: 01bc2947b0af4affbbc2fe626694b4dc
msgid "First you need to build all packages that you want to test. Please do not mix branches as this will inevitably lead to failures. Then setup Qubes OS with these packages installed."
msgstr ""

#: ../developer/debugging/automated-tests.md:30
#: 663483ca1e0940a981a711f032e46b6a
msgid "For testing you'll have to stop the `qubesd` service as the tests will use its own custom variant of the service: `sudo systemctl stop qubesd`"
msgstr ""

#: ../developer/debugging/automated-tests.md:33
#: ec10bcfd0a1541698ff87b1e9e707cfa
msgid "Don't forget to start it after testing again."
msgstr ""

#: ../developer/debugging/automated-tests.md:35
#: 7d93c5ed6e0b4f00a05a451dbf6fa5b8
msgid "To start testing you can then use the standard python unittest runner:"
msgstr ""

#: ../developer/debugging/automated-tests.md:37
#: 077b0b51bb814626b4dde8d8565cbcaa
msgid "`sudo -E python3 -m unittest -v qubes.tests`"
msgstr ""

#: ../developer/debugging/automated-tests.md:39
#: ad85083f1f144a14843f21e077e87c62
msgid "Alternatively, use the custom Qubes OS test runner:"
msgstr ""

#: ../developer/debugging/automated-tests.md:41
#: 3626e8b86b844dfc919cbfe53bc07ba4
msgid "`sudo -E python3 -m qubes.tests.run -v`"
msgstr ""

#: ../developer/debugging/automated-tests.md:43
#: 9102f7304c5b4084b23b8700c823e928
msgid "Our test runner runs mostly the same as the standard one, but it has some nice additional features like colored output and not needing the \"qubes.test\" prefix."
msgstr ""

#: ../developer/debugging/automated-tests.md:45
#: a978b3632893422281c3f8b250d4cdf2
msgid "You can use `python3 -m qubes.tests.run -h` to get usage information:"
msgstr ""

#: ../developer/debugging/automated-tests.md:87
#: 719053f13d014b36b156d6e1091c6884
msgid "For instance, to run only the tests for the fedora-21 template, you can use the `-l` option, then filter the list:"
msgstr ""

#: ../developer/debugging/automated-tests.md:114
#: 151dbb206aa24f21bb374a4c110a958d
msgid "Example test run:"
msgstr ""

#: ../developer/debugging/automated-tests.md:116
#: 0bd1de0fea044867b5e3e22eb84dc85d
msgid "![snapshot-tests2.png](/attachment/doc/snapshot-tests2.png)"
msgstr ""

#: ../developer/debugging/automated-tests.md:116
#: 0d83dc0fa0d34f9181050aced02b1291
msgid "snapshot-tests2.png"
msgstr ""

#: ../developer/debugging/automated-tests.md:118
#: 14878a56a10445b4bebc7859f612a2ff
msgid "Tests are also compatible with nose2 test runner, so you can use this instead:"
msgstr ""

#: ../developer/debugging/automated-tests.md:124
#: 30bfe00f2b8a42bca605d3c117ee3d67
msgid "This may be especially useful together with various nose2 plugins to store tests results (for example `nose2.plugins.junitxml`), to ease presenting results. This is what we use on [OpenQA](http://open.qa/)."
msgstr ""

#: ../developer/debugging/automated-tests.md:126
#: 410f54025dab4c18864d906140521e4c
msgid "Unit testing inside a VM"
msgstr ""

#: ../developer/debugging/automated-tests.md:128
#: d574fb4d3b2f4db9968b26e05e59aec8
msgid "Many unit tests will also work inside a VM. However all of the tests requiring a dedicated VM to be run (mostly the integration tests) will be skipped."
msgstr ""

#: ../developer/debugging/automated-tests.md:130
#: c811f2ac74274e91988c855b61d7e3a5
msgid "Whereas integration tests are mostly stored in the [qubes-core-admin](https://github.com/QubesOS/qubes-core-admin) repository, unit tests can be found in each of the Qubes OS repositories."
msgstr ""

#: ../developer/debugging/automated-tests.md:132
#: e9169d680cee4dde95513501ee212495
msgid "To for example run the `qubes-core-admin` unit tests, you currently have to clone at least [qubes-core-admin](https://github.com/QubesOS/qubes-core-admin) and its dependency [qubes-core-qrexec](https://github.com/QubesOS/qubes-core-qrexec) repository in the branches that you want to test."
msgstr ""

#: ../developer/debugging/automated-tests.md:135
#: 40b701c807b8462e80c651c84f760eb2
msgid "The below example however will assume that you set up a build environment as described in the [Qubes Builder documentation](/doc/qubes-builder/)."
msgstr ""

#: ../developer/debugging/automated-tests.md:137
#: 681950e9e9ef44e0b2b25860ef52f805
msgid "Assuming you cloned the `qubes-builder` repository to your home directory inside a fedora VM, you can use the following commands to run the unit tests:"
msgstr ""

#: ../developer/debugging/automated-tests.md:151
#: efea7ad16c4b469a905574811a8f2540
msgid "To run only the tests related to e.g. `lvm`, you may use:"
msgstr ""

#: ../developer/debugging/automated-tests.md:153
#: 3684e922fec24f6c8ab8718686ffad0b
msgid "`./run-tests -v $(python3 -m qubes.tests.run -l | grep lvm)`"
msgstr ""

#: ../developer/debugging/automated-tests.md:155
#: 22470836986049efa0f4a776d4283a20
msgid "You can later re-use the created virtual environment including all of the via `pip3` installed packages with `source ~/python35/bin/activate`."
msgstr ""

#: ../developer/debugging/automated-tests.md:157
#: 37598e1658d948b0b5aed13d6d2f03be
msgid "We recommend to run the unit tests with the Python version that the code is meant to be run with in dom0 (3.5 was just an example above). For instance, the `release4.0` (Qubes 4.0) branch is intended to be run with Python 3.5 whereas the Qubes 4.1 branch (`master` as of 2020-07) is intended to be run with Python 3.7 or higher. You can always check your dom0 installation for the Python version of the current stable branch."
msgstr ""

#: ../developer/debugging/automated-tests.md:161
#: 3a4f5cae56154cee98aa39e7fd586f04
msgid "Tests configuration"
msgstr ""

#: ../developer/debugging/automated-tests.md:163
#: df8cba52192943908c4a6882d70249e0
msgid "Test runs can be altered using environment variables:"
msgstr ""

#: ../developer/debugging/automated-tests.md:165
#: b13c3ccf3f2d4527a4763c1872dfc9d6
msgid "`DEFAULT_LVM_POOL` - LVM thin pool to use for tests, in `VolumeGroup/ThinPool` format"
msgstr ""

#: ../developer/debugging/automated-tests.md:166
#: cb539b75449448519aa3c3faf9f8b85f
msgid "`QUBES_TEST_PCIDEV` - PCI device to be used in PCI passthrough tests (for example sound card)"
msgstr ""

#: ../developer/debugging/automated-tests.md:167
#: bc557ba9453042af856770a446d75ec4
msgid "`QUBES_TEST_TEMPLATES` - space separated list of templates to run tests on; if not set, all installed templates are tested"
msgstr ""

#: ../developer/debugging/automated-tests.md:168
#: 7b07b49dc10649548245b91ca59a4d0c
msgid "`QUBES_TEST_LOAD_ALL` - load all tests (including tests for all templates) when relevant test modules are imported; this needs to be set for test runners not supporting [load_tests protocol](https://docs.python.org/3/library/unittest.html#load-tests-protocol)"
msgstr ""

#: ../developer/debugging/automated-tests.md:170
#: 44fc153c564e43a2b9df7abef9ef81a8
msgid "Adding a new test to core-admin"
msgstr ""

#: ../developer/debugging/automated-tests.md:172
#: 827c2b35db59433d87739c978923ea00
msgid "After adding a new unit test to [core-admin/qubes/tests](https://github.com/QubesOS/qubes-core-admin/tree/master/qubes/tests) you'll have to include it in [core-admin/qubes/tests/\\_\\_init\\_\\_.py](https://github.com/QubesOS/qubes-core-admin/tree/master/qubes/tests/__init__.py)"
msgstr ""

#: ../developer/debugging/automated-tests.md:174
#: baa7af9d6c884fdd8ad017cdf3e186b4
msgid "Editing `__init__.py`"
msgstr ""

#: ../developer/debugging/automated-tests.md:176
#: 15dec4d2a6e24c32822004fbd6f859a0
msgid "You'll also need to add your test at the bottom of the `__init__.py` file, in the method `def load_tests`, in the for loop with `modname`. Again, given the hypothetical `example.py` test:"
msgstr ""

#: ../developer/debugging/automated-tests.md:192
#: e15b445dcb2c4c9ba2236280b8a3abed
msgid "Testing PyQt applications"
msgstr ""

#: ../developer/debugging/automated-tests.md:194
#: eec7f0650c434920a6f0c9cbd6a1dd11
msgid "When testing (Py)QT applications, it's useful to create a separate QApplication object for each test. But QT framework does not allow multiple QApplication objects in the same process at the same time. This means it's critical to reliably cleanup the previous instance before creating a new one. This turns out to be a non-trivial task, especially if _any_ test uses the event loop. Failure to perform proper cleanup in many cases results in SEGV. Below you can find steps for the proper cleanup:"
msgstr ""

#: ../developer/debugging/automated-tests.md:245
#: 949dc98b465149b885e28ba953447d00
msgid "Installation Tests with openQA"
msgstr ""

#: ../developer/debugging/automated-tests.md:247
#: af6dfeac08a942e79240a9db0a609329
msgid "**URL:** <https://openqa.qubes-os.org/>"
msgstr ""

#: ../developer/debugging/automated-tests.md:249
#: 35073fe013ed4ca685d6d514bda56e1f
msgid "**Tests:** <https://github.com/marmarek/openqa-tests-qubesos>"
msgstr ""

#: ../developer/debugging/automated-tests.md:251
#: c715370fef094b2aad5e661dd1f767df
msgid "Manually testing the installation of Qubes OS is a time-consuming process. We use [OpenQA](http://open.qa/) to automate this process. It works by installing Qubes in KVM and interacting with it as a user would, including simulating mouse clicks and keyboard presses. Then, it checks the output to see whether various tests were passed, e.g. by comparing the virtual screen output to screenshots of a successful installation."
msgstr ""

#: ../developer/debugging/automated-tests.md:256
#: bb541c77dba4497c8d621bffa07b4e31
msgid "Using openQA to automatically test the Qubes installation process works as of Qubes 4.0-rc4 on 2018-01-26, provided that the versions of KVM and QEMU are new enough and the hardware has VT-x and EPT. KVM also supports nested virtualization, so HVM should theoretically work. In practice, however, either Xen or QEMU crashes when this is attempted. Nonetheless, PV works well, which is sufficient for automated installation testing."
msgstr ""

#: ../developer/debugging/automated-tests.md:261
#: 88e866d41efa47719fa9b7504e3fb17a
msgid "Thanks to an anonymous donor, our openQA system is hosted in a datacenter on hardware that meets these requirements."
msgstr ""
