# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, test
# This file is distributed under the same license as the qubes-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: qubes-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-15 21:10+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../developer/services/qrexec-socket-services.md:9
#: 8b0a5b086c8b4a7f91586b6400ceb1de
msgid "*This page describes how to implement and use new socket-backed services for qrexec. See [qrexec](/doc/qrexec/) for general overview of the qrexec framework.*"
msgstr ""

#: ../developer/services/qrexec-socket-services.md:11
#: e2ca05ba423a42e189ec08fbdf0888e9
msgid "As of Qubes 4.1, qrexec allows implementing services not only as executable files, but also as Unix sockets. This allows Qubes RPC requests to be handled by a server running in a VM and listening for connections."
msgstr ""

#: ../developer/services/qrexec-socket-services.md:14
#: d609230eb6654a19abf4266e03e27825
msgid "How it works"
msgstr ""

#: ../developer/services/qrexec-socket-services.md:16
#: 4d7100841e134256bb952cbe191071c0
msgid "When a Qubes RPC service is invoked, qrexec searches for a file that handles it in the qubes-rpc directories (`/etc/qubes-rpc` or `/usr/local/etc/qubes-rpc`). If the file is a Unix socket, qrexec will try to connect to it."
msgstr ""

#: ../developer/services/qrexec-socket-services.md:20
#: 0c4c8a8ec4a043dbb9b7a10496dbe71f
msgid "Before passing user input, the socket service will receive a null-terminated service descriptor, i.e. the part after `QUBESRPC`. When running in a VM, this is:"
msgstr ""

#: ../developer/services/qrexec-socket-services.md:27
#: 31c6d3062b7a4295a5cc71f1ce53e5b8
msgid "When running in dom0, it is:"
msgstr ""

#: ../developer/services/qrexec-socket-services.md:33
#: d4f7d00d44094d87aad731641f804bc3
msgid "(The target type can be `name`, in which case target is a domain name, or `keyword`, in which the target is a keyword like `@dispvm`)."
msgstr ""

#: ../developer/services/qrexec-socket-services.md:35
#: da5f889a74b14b7fb0fe7c9cda1ba4bf
msgid "Afterwards, data provided by the service's user (as stdin) is sent into the socket, and data received from the socket is sent back to the user (as stdout). When the service closes the socket, an exit code of 0 is sent back to the user."
msgstr ""

#: ../developer/services/qrexec-socket-services.md:38
#: a44b66be5fa14d4b8230ebfc98cb790a
msgid "Differences from executable-based services"
msgstr ""

#: ../developer/services/qrexec-socket-services.md:40
#: 60541343d2114541933c23e4468204d8
msgid "From the user point of view, the socket-based service behaves almost like an executable-based one. Here are the differences:"
msgstr ""

#: ../developer/services/qrexec-socket-services.md:43
#: 2283e2e1937747b1af6747e8189b1b84
msgid "There is no stderr (the socket provides only one output stream). Currently, that means stderr will also never be closed on user's end."
msgstr ""

#: ../developer/services/qrexec-socket-services.md:45
#: 795f5d7b4ae14c7e9d401367a884a1aa
msgid "There is no exit code. When the socket connection is closed, exit code 0 is sent to the user."
msgstr ""

#: ../developer/services/qrexec-socket-services.md:48
#: b7b13333914b4aaa9081bd2e7cc4e09f
msgid "Recommended use"
msgstr ""

#: ../developer/services/qrexec-socket-services.md:50
#: 11711aef50f94101820a5d3e7e012a20
msgid "Create a program that binds to path *outside* `/etc/qubes-rpc`, such as `/var/run/my-daemon.sock`. Put a symlink in `/etc/qubes-rpc`, e.g. `ln -s /var/run/my-daemon.sock /etc/qubes-rpc/qubes.Service`."
msgstr ""

#: ../developer/services/qrexec-socket-services.md:53
#: 69c921beda1a4c9d9df529957167c174
msgid "If your program handles multiple services, create multiple symlinks. You can dispatch based on the service descriptor."
msgstr ""

#: ../developer/services/qrexec-socket-services.md:56
#: 827fb28393d14223ae296f6e6310dc19
msgid "Do not run the program as root."
msgstr ""

#: ../developer/services/qrexec-socket-services.md:58
#: edd20973f434415c9f45f36570040ef8
msgid "You can use systemd and socket activation so that the program is started only when the service is invoked. See the below example."
msgstr ""

#: ../developer/services/qrexec-socket-services.md:61
#: b4a40a11940640ae9024e73395e87d37
msgid "Example: `qrexec-policy-agent`"
msgstr ""

#: ../developer/services/qrexec-socket-services.md:63
#: 978c9303973c4eeb9d9f848d449f6999
msgid "`qrexec-policy-agent` is the program that handles \"ask\" prompts for Qubes RPC calls. It is a good example of an application that:"
msgstr ""

#: ../developer/services/qrexec-socket-services.md:66
#: 737e084f92d7490483819232e328ee44
msgid "Uses Python and asyncio."
msgstr ""

#: ../developer/services/qrexec-socket-services.md:67
#: 964dda02b65f40dcbacfadcbe93bf4ea
msgid "Runs as a daemon, to save some overhead on starting process."
msgstr ""

#: ../developer/services/qrexec-socket-services.md:68
#: bb6bbcfc14b140fcaf2cd3d08cd9d856
msgid "Runs as a normal user. This is achieved using user's instance of systemd."
msgstr ""

#: ../developer/services/qrexec-socket-services.md:70
#: d4706419f8184e0ca0101b2ece58f9c7
msgid "Uses systemd socket activation. This way it can be installed in all VMs, but started only if it's ever needed."
msgstr ""

#: ../developer/services/qrexec-socket-services.md:73
#: c56afa9fabd744f1a94a1f77501cb5bd
msgid "See the [qubes-core-qrexec](https://github.com/QubesOS/qubes-core-qrexec/) repository for details."
msgstr ""

#: ../developer/services/qrexec-socket-services.md:75
#: 76738ad47404491bae9f4d094aca066e
msgid "Systemd unit files"
msgstr ""

#: ../developer/services/qrexec-socket-services.md:77
#: 8df65166231f4f7aa3e745d1ad468f47
msgid "**/lib/systemd/user/qubes-qrexec-policy-agent.service**: This is the service configuration."
msgstr ""

#: ../developer/services/qrexec-socket-services.md:94
#: 38de80cbf1444d6c91e74c9b30c56c3d
msgid "**/lib/systemd/user/qubes-qrexec-policy-agent.socket**: This is the socket file that will activate the service."
msgstr ""

#: ../developer/services/qrexec-socket-services.md:110
#: b34527a1e2cd408abbb10212ad2b15f5
msgid "Note the `ConditionUser` and `ConditionGroup` that ensure that the socket and service is started only as the right user"
msgstr ""

#: ../developer/services/qrexec-socket-services.md:112
#: bcf2964e21954f88a6830db01a255eea
msgid "Start the socket using `systemctl --user start`. Enable it using `systemctl --user enable`, so that it starts automatically."
msgstr ""

#: ../developer/services/qrexec-socket-services.md:120
#: 620d59ea203f4c50a945aaefd2294925
msgid "Alternatively, you can enable the service by creating a symlink:"
msgstr ""

#: ../developer/services/qrexec-socket-services.md:126
#: f69d134e415542d893dba8f38430520c
msgid "Link in qubes-rpc"
msgstr ""

#: ../developer/services/qrexec-socket-services.md:128
#: 5f2f4b05e5c8470faee7a16f3f088df4
msgid "`qrexec-policy-agent` will handle a Qubes RPC service called `policy.Ask`, so we add a link:"
msgstr ""

#: ../developer/services/qrexec-socket-services.md:134
#: 1706c1b701e143ebaa02ed1fb9d553c3
msgid "Python server with socket activation"
msgstr ""

#: ../developer/services/qrexec-socket-services.md:136
#: bb07850a02d04db58a732beb3bebf393
msgid "Socket activation in systemd works by starting our program with the socket file already bound at a specific file descriptor. It's a simple mechanism based on a few environment variables, but the canonical way is to use the `sd_listen_fds()` function from systemd library (or, in our case, its Python version)."
msgstr ""

#: ../developer/services/qrexec-socket-services.md:139
#: 1b9391e769cc4ab6bee106836dbdecc5
msgid "Install the Python systemd library:"
msgstr ""

#: ../developer/services/qrexec-socket-services.md:145
#: d1faf96e19bb41049afc4ce30ff02d7e
msgid "Here is the server code:"
msgstr ""

#: ../developer/services/qrexec-socket-services.md:213
#: 25f53b56e167465e97bc18758508c259
msgid "You can also use `qrexec/server.py` from [qubes-core-qrexec](https://github.com/QubesOS/qubes-core-qrexec/) repository, which is a variant of the above code - but note that currently it's somewhat more specific (JSON requests and ASCII responses; no target handling in service descriptors)."
msgstr ""

#: ../developer/services/qrexec-socket-services.md:215
#: d0d86b7197234252857f9b69a57148ad
msgid "Using the service"
msgstr ""

#: ../developer/services/qrexec-socket-services.md:217
#: 321bb3e64c6342578e1fbf6e99175145
msgid "The service is invoked in the same way as a standard Qubes RPC service:"
msgstr ""

#: ../developer/services/qrexec-socket-services.md:223
#: 8b9e36a334a74753951cbac2a9bb6602
msgid "You can also connect to it locally, but remember to include the service descriptor:"
msgstr ""

#: ../developer/services/qrexec-socket-services.md:229
#: f78e30ee75a2470bb48ce0ed4e74eab7
msgid "Further reading"
msgstr ""

#: ../developer/services/qrexec-socket-services.md:231
#: 2237fd63b1844b209390cb5b9bb86309
msgid "[Qrexec overview](/doc/qrexec/)"
msgstr ""

#: ../developer/services/qrexec-socket-services.md:232
#: 9efc728ef3274f2191536e63c3d589aa
msgid "[Qrexec internals](/doc/qrexec-internals/)"
msgstr ""

#: ../developer/services/qrexec-socket-services.md:233
#: b5d76f1ef92e4102b87d226d2d80917d
msgid "[qubes-core-qrexec](https://github.com/QubesOS/qubes-core-qrexec/) repository - contains the above example"
msgstr ""

#: ../developer/services/qrexec-socket-services.md:234
#: 451e7fec9421443d87996cfb1984d374
msgid "[systemd.socket](https://www.freedesktop.org/software/systemd/man/systemd.socket.html) - socket unit configuration"
msgstr ""

#: ../developer/services/qrexec-socket-services.md:235
#: e8a72aea660f47cb99ad56dd64d51ae9
msgid "[Streams in Python asyncio](https://docs.python.org/3/library/asyncio-stream.html)"
msgstr ""
