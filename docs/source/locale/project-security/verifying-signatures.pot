# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, test
# This file is distributed under the same license as the qubes-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: qubes-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-15 21:10+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../project-security/verifying-signatures.md:14
#: a86b4768e05c44d6bf5ee9ee98b81034
msgid "What Digital Signatures Can and Cannot Prove"
msgstr ""

#: ../project-security/verifying-signatures.md:16
#: 9951e031c72048b59ee594f32e71eda7
msgid "Most people --- even programmers --- are confused about the basic concepts underlying digital signatures. Therefore, most people should read this section, even if it looks trivial at first sight."
msgstr ""

#: ../project-security/verifying-signatures.md:20
#: b38a17dd23c045f4b18cf998f3ad8b79
msgid "Digital signatures can prove both **authenticity** and **integrity** to a reasonable degree of certainty. **Authenticity** ensures that a given file was indeed created by the person who signed it (i.e., that it was not forged by a third party). **Integrity** ensures that the contents of the file have not been tampered with (i.e., that a third party has not undetectably altered its contents *en route*)."
msgstr ""

#: ../project-security/verifying-signatures.md:27
#: c172dfe6c891413e9d3ca6b6fd164707
msgid "Digital signatures **cannot** prove any other property, e.g., that the signed file is not malicious. In fact, there is nothing that could stop someone from signing a malicious program (and it happens from time to time in reality)."
msgstr ""

#: ../project-security/verifying-signatures.md:31
#: f284cb084f0642adac28fe0741853508
msgid "The point is that we must decide who we will trust (e.g., Linus Torvalds, Microsoft, or the Qubes Project) and assume that if a given file was signed by a trusted party, then it should not be malicious or negligently buggy. The decision of whether to trust any given party is beyond the scope of digital signatures. It's more of a sociological and political decision."
msgstr ""

#: ../project-security/verifying-signatures.md:37
#: 1abb39bfb0434bfda188aa0223f5063b
msgid "Once we make the decision to trust certain parties, digital signatures are useful, because they make it possible for us to limit our trust only to those few parties we choose and not to worry about all the bad things that can happen between us and them, e.g., server compromises (qubes-os.org will surely be compromised one day, so [don't blindly trust the live version of this site](/faq/#should-i-trust-this-website)), dishonest IT staff at the hosting company, dishonest staff at the ISPs, Wi-Fi attacks, etc. We call this philosophy [Distrusting the Infrastructure](/faq/#what-does-it-mean-to-distrust-the-infrastructure)."
msgstr ""

#: ../project-security/verifying-signatures.md:47
#: 76efe33eaf83402f9f6f7a34f1d5b1bd
msgid "By verifying all the files we download that purport to be authored by a party we've chosen to trust, we eliminate concerns about the bad things discussed above, since we can easily detect whether any files have been tampered with (and subsequently choose to refrain from executing, installing, or opening them)."
msgstr ""

#: ../project-security/verifying-signatures.md:53
#: d150feb8eb9547e08f271f50a3598ad6
msgid "However, for digital signatures to make any sense, we must ensure that the public keys we use for signature verification are indeed the original ones. Anybody can generate a GPG key pair that purports to belong to \"The Qubes Project,\" but of course only the key pair that we (i.e., the Qubes developers) generated is the legitimate one. The next section explains how to verify the validity of the Qubes signing keys in the process of verifying a Qubes ISO. (However, the same general principles apply to all cases in which you may wish to verify a PGP signature, such as [verifying repos](#how-to-verify-qubes-repos), not just verifying ISOs.)"
msgstr ""

#: ../project-security/verifying-signatures.md:63
#: a444aa68f10b4ff382f94affca9137ae
msgid "How to Verify Qubes ISO Signatures"
msgstr ""

#: ../project-security/verifying-signatures.md:65
#: 1a35ef48e16a4bebbb1713e60f64d51d
msgid "This section will guide you through the process of verifying a Qubes ISO by checking its PGP signature. There are three basic steps in this process:"
msgstr ""

#: ../project-security/verifying-signatures.md:68
#: ../project-security/verifying-signatures.md:477
#: f3633f1d4a4c48f5a19a6baa3040b2cd
#: 7b12a7a6d0fc4d73a5fc44a39dde16fd
msgid "[Get the Qubes Master Signing Key and verify its authenticity](#1-get-the-qubes-master-signing-key-and-verify-its-authenticity)"
msgstr ""

#: ../project-security/verifying-signatures.md:70
#: ../project-security/verifying-signatures.md:479
#: 49e554634401487f87a0552bceee372c
#: 705fa1bab92041efa92c9a34763e5218
msgid "[Get the Release Signing Key](#2-get-the-release-signing-key)"
msgstr ""

#: ../project-security/verifying-signatures.md:71
#: f8a77b32b0d6447fb1923e1716a314bd
msgid "[Verify your Qubes ISO](#3-verify-your-qubes-iso)"
msgstr ""

#: ../project-security/verifying-signatures.md:73
#: 1b24c9cd02e841bf9bdd6578dfcad4a4
msgid "If you run into any problems, please consult the [Troubleshooting FAQ](#troubleshooting-faq) below."
msgstr ""

#: ../project-security/verifying-signatures.md:76
#: 50f032f2cf5643f59a2bfaeb30a7a813
msgid "Preparation"
msgstr ""

#: ../project-security/verifying-signatures.md:78
#: b7e6ac6744894ae2ba3cf44c0aa6e0ba
msgid "Before we begin, you'll need a program that can verify PGP signatures. Any such program will do, but here are some examples for popular operating systems:"
msgstr ""

#: ../project-security/verifying-signatures.md:81
#: fbf5d79c589541028f2007526c2f6b69
msgid "**Windows:** [Gpg4win](https://gpg4win.org/download.html) ([documentation](https://www.gpg4win.org/documentation.html)). Use the Windows command line (`cmd.exe`) to enter commands."
msgstr ""

#: ../project-security/verifying-signatures.md:85
#: 86dcb60b47514f7d986a72bed0e7d881
msgid "**Mac:** [GPG Suite](https://gpgtools.org/) ([documentation](https://gpgtools.tenderapp.com/kb)). Open a terminal to enter commands."
msgstr ""

#: ../project-security/verifying-signatures.md:89
#: 87a78c772769460bbea20a6e35b5937d
msgid "**Linux:** `gpg2` from your package manager or from [gnupg.org](https://gnupg.org/download/index.html) ([documentation](https://www.gnupg.org/documentation/)). Open a terminal to enter commands."
msgstr ""

#: ../project-security/verifying-signatures.md:94
#: 786388a4f3cc47a38cf82aafff549122
msgid "The commands below will use `gpg2`, but if that doesn't work for you, try `gpg` instead. If that still doesn't work, please consult the documentation for your specific program (see links above)."
msgstr ""

#: ../project-security/verifying-signatures.md:98
#: dd8955d40ac64a4abc1b2849cb69f8bd
msgid "1. Get the Qubes Master Signing Key and verify its authenticity"
msgstr ""

#: ../project-security/verifying-signatures.md:100
#: eef0a49dc5fa4dc2a97b8a1b9aab91e0
msgid "Every file published by the Qubes Project (ISO, RPM, TGZ files and Git repositories) is digitally signed by one of the developer keys or Release Signing Keys. Each such key is signed by the [Qubes Master Signing Key](https://keys.qubes-os.org/keys/qubes-master-signing-key.asc) (`0xDDFA1A3E36879494`). The developer signing keys are set to expire after one year, while the Qubes Master Signing Key and Release Signing Keys have no expiration date. This Qubes Master Signing Key was generated on and is kept only on a dedicated, air-gapped \"vault\" machine, and the private portion will (hopefully) never leave this isolated machine."
msgstr ""

#: ../project-security/verifying-signatures.md:110
#: 04867d26f59643228c36e29be98a0b0b
msgid "There are several ways to get the Qubes Master Signing Key."
msgstr ""

#: ../project-security/verifying-signatures.md:112
#: fe718e55dc214c0c9db9ab6fc7a89a52
msgid "If you have access to an existing Qubes installation, it's available in every VM ([except dom0](https://github.com/QubesOS/qubes-issues/issues/2544)):"
msgstr ""

#: ../project-security/verifying-signatures.md:119
#: bcee06b3f5354c569adc73c25c4dd125
msgid "If you're on Fedora, you can get it in the `distribution-gpg-keys` package:"
msgstr ""

#: ../project-security/verifying-signatures.md:125
#: d66f5fc596e54178b97d072f436a7467
msgid "If youâ€™re on Debian, it may already be included in your keyring."
msgstr ""

#: ../project-security/verifying-signatures.md:127
#: ../project-security/verifying-signatures.md:304
#: cec243c0a5c246f4b263ad97eb46052f
#: d6c27e045cea4c48ab1b2239d2d81dd9
msgid "Fetch it with GPG:"
msgstr ""

#: ../project-security/verifying-signatures.md:133
#: ddfddfbb080d470aa0a8eeab3a829297
msgid "Download it as a [file](https://keys.qubes-os.org/keys/qubes-master-signing-key.asc), then import it with GPG:"
msgstr ""

#: ../project-security/verifying-signatures.md:141
#: 1ff9d6af5d314c1bb3c7ca649e93cf6d
msgid "Get it from a public [keyserver](https://en.wikipedia.org/wiki/Key_server_%28cryptographic%29#Keyserver_examples) (specified on first use with `--keyserver <URI>` along with keyserver options to include key signatures), e.g.:"
msgstr ""

#: ../project-security/verifying-signatures.md:150
#: ba7fcf29c4364cb39c5b7177b7ceb5a6
msgid "The Qubes Master Signing Key is also available in the [Qubes Security Pack](/security/pack/) and in the archives of the project's [developer](https://groups.google.com/d/msg/qubes-devel/RqR9WPxICwg/kaQwknZPDHkJ) and [user](https://groups.google.com/d/msg/qubes-users/CLnB5uFu_YQ/ZjObBpz0S9UJ) [mailing lists](/support/)."
msgstr ""

#: ../project-security/verifying-signatures.md:157
#: 6818aab24e294149a5825f80862e6891
msgid "Once you have obtained the Qubes Master Signing Key, you must verify that it is authentic rather than a forgery. Anyone can create a PGP key with the name \"Qubes Master Signing Key,\" so you cannot rely on the name alone. You also should not rely on any single website, not even over HTTPS."
msgstr ""

#: ../project-security/verifying-signatures.md:162
#: d9d593b7b4054b96afc1265a6ba8cb7d
msgid "So, what *should* you do? One option is to use the PGP [Web of Trust](https://en.wikipedia.org/wiki/Web_of_trust). In addition, some operating systems include the means to acquire the Qubes Master Signing Key in a secure way. For example, on Fedora, `dnf install distribution-gpg-keys` will get you the Qubes Master Signing Key along with several other Qubes keys. On Debian, your keyring may already contain the necessary keys."
msgstr ""

#: ../project-security/verifying-signatures.md:169
#: a50b4fa1bda4489aa438ff88c573fd55
msgid "Another option is to rely on the key's fingerprint. Every PGP key has a fingerprint that uniquely identifies it among all PGP keys (viewable with `gpg2 --fingerprint <KEY_ID>`). Therefore, if you know the genuine Qubes Master Signing Key fingerprint, then you always have an easy way to confirm whether any purported copy of it is authentic, simply by comparing the fingerprints."
msgstr ""

#: ../project-security/verifying-signatures.md:175
#: 9bf37ab0ce9a41b5a6674c85aa3839e5
msgid "For example, here is the Qubes Master Signing Key fingerprint:"
msgstr ""

#: ../project-security/verifying-signatures.md:183
#: 0308f88822354d4c987e4afee733426a
msgid "But how do you know that this is the real fingerprint? After all, [this website could be compromised](/faq/#should-i-trust-this-website), so the fingerprint you see here may not be genuine. That's why we strongly suggest obtaining the fingerprint from *multiple, independent sources in several different ways*."
msgstr ""

#: ../project-security/verifying-signatures.md:188
#: 7700a3b07f0e4a868efcaaa191fbc32e
msgid "Here are some ideas for how to do that:"
msgstr ""

#: ../project-security/verifying-signatures.md:190
#: 07a7aefd4dee419bbdf6cda61e337fcc
msgid "Check the fingerprint on various websites (e.g., [mailing lists](https://groups.google.com/g/qubes-devel/c/RqR9WPxICwg/m/kaQwknZPDHkJ), [discussion forums](https://qubes-os.discourse.group/t/there-is-no-way-to-validate-qubes-master-signing-key/1441/9?u=adw), [social](https://twitter.com/rootkovska/status/496976187491876864) [media](https://www.reddit.com/r/Qubes/comments/5bme9n/fingerprint_verification/), [personal websites](https://andrewdavidwong.com/fingerprints.txt))."
msgstr ""

#: ../project-security/verifying-signatures.md:197
#: 5152b0cd412b4dac8195a533dedf842c
msgid "Check against PDFs, photographs, and videos in which the fingerprint appears (e.g., [slides from a talk](https://hyperelliptic.org/PSC/slides/psc2015_qubesos.pdf), on a [T-shirt](https://twitter.com/legind/status/813847907858337793/photo/2), or in the [recording of a presentation](https://youtu.be/S0TVw7U3MkE?t=2563))."
msgstr ""

#: ../project-security/verifying-signatures.md:202
#: 3b0c36716d9945d5a2fa3940b709e1f3
msgid "Download old Qubes ISOs from different sources and check the included Qubes Master Signing Key."
msgstr ""

#: ../project-security/verifying-signatures.md:204
#: d425d0a4daf741a5a94aa60499796183
msgid "Ask people to post the fingerprint on various mailing lists, forums, and chat rooms."
msgstr ""

#: ../project-security/verifying-signatures.md:206
#: 21cc33e7f7b0491e90c56660ccac736d
msgid "Repeat the above over Tor."
msgstr ""

#: ../project-security/verifying-signatures.md:207
#: 73592f87d345455796e9b575235fe269
msgid "Repeat the above over various VPNs and proxy servers."
msgstr ""

#: ../project-security/verifying-signatures.md:208
#: a378d4b96ac14e26b0aeb238114b7d85
msgid "Repeat the above on different networks (work, school, internet cafe, etc.)."
msgstr ""

#: ../project-security/verifying-signatures.md:209
#: aaacad17752b43e1a3a4dd47df0af359
msgid "Text, email, call, video chat, snail mail, or meet up with people you know to confirm the fingerprint."
msgstr ""

#: ../project-security/verifying-signatures.md:211
#: 717effdbdb7b4bfca6a3d8fe8df16cfd
msgid "Repeat the above from different computers and devices."
msgstr ""

#: ../project-security/verifying-signatures.md:213
#: 8cfd969600014e479ff96a9da8819280
msgid "Once you've obtained the fingerprint from enough independent sources in enough different ways that you feel confident that you know the genuine fingerprint, keep it in a safe place. Every time you need to check whether a key claiming to be the Qubes Master Signing Key is authentic, compare that key's fingerprint to your trusted copy and confirm they match."
msgstr ""

#: ../project-security/verifying-signatures.md:219
#: 4cc4ba22c4264f66b946d08cac418f34
msgid "Now that you've imported the authentic Qubes Master Signing Key, set its trust level to \"ultimate\" so that it can be used to automatically verify all the keys signed by the Qubes Master Signing Key (in particular, Release Signing Keys)."
msgstr ""

#: ../project-security/verifying-signatures.md:264
#: 749827e6ebbb4c439c47d8167f4596c0
msgid "Now, when you import any of the legitimate Qubes developer keys and Release Signing Keys used to sign ISOs, RPMs, TGZs, Git tags, and Git commits, they will already be trusted in virtue of being signed by the Qubes Master Signing Key."
msgstr ""

#: ../project-security/verifying-signatures.md:269
#: a3324bb486954c3f9e459d0caecadde6
msgid "Before proceeding to the next step, make sure the Qubes Master Signing Key is in your keyring with the correct trust level. (Note: We have already verified the authenticity of the key, so this final check is not about security. Rather, it's just a sanity check to make sure that we've imported the key into our keyring correctly.)"
msgstr ""

#: ../project-security/verifying-signatures.md:282
#: c7c34fb0c41e41659d5698aa91b37d15
msgid "If you don't see the Qubes Master Signing Key here with a trust level of \"ultimate,\" go back and follow the instructions in this section carefully."
msgstr ""

#: ../project-security/verifying-signatures.md:285
#: 09532f0bc17e4e249d3f9b910ffa5f16
msgid "2. Get the Release Signing Key"
msgstr ""

#: ../project-security/verifying-signatures.md:287
#: 6a9b38c16d2649d582905bf3326117f3
msgid "The filename of the Release Signing Key for your version is usually `qubes-release-X-signing-key.asc`, where `X` is the major version number of your Qubes release. There are several ways to get the Release Signing Key for your Qubes release."
msgstr ""

#: ../project-security/verifying-signatures.md:292
#: c8b78ffb7dc04664bea688ccfc85b154
msgid "If you have access to an existing Qubes installation, the release keys are available in dom0 in `/etc/pki/rpm-gpg/RPM-GPG-KEY-qubes-*`. These can be [copied](/doc/how-to-copy-from-dom0/#copying-from-dom0) into other VMs for further use. In addition, every other VM contains the release key corresponding to that installation's release in `/etc/pki/rpm-gpg/RPM-GPG-KEY-qubes-*`. If you wish to use one of these keys, make sure to import it into your keyring, e.g.:"
msgstr ""

#: ../project-security/verifying-signatures.md:310
#: 15d470d818c44170844828771b4e4ac5
msgid "Download it as a file. You can find the Release Signing Key for your Qubes version on the [Downloads](/downloads/) page. You can also download all the currently used developers' signing keys, Release Signing Keys, and the Qubes Master Signing Key from the [Qubes Security Pack](/security/pack/) and the [Qubes OS Keyserver](https://keys.qubes-os.org/keys/). Once you've downloaded your Release Signing Key, import it with GPG:"
msgstr ""

#: ../project-security/verifying-signatures.md:321
#: b39d08d5c14748bd9055160bc56d826d
msgid "The Release Signing Key should be signed by the Qubes Master Signing Key:"
msgstr ""

#: ../project-security/verifying-signatures.md:334
#: 1f4285f3af54461a8c40289b03261baf
msgid "This is just an example, so the output you receive will not look exactly the same. What matters is the line that shows that this key is signed by the Qubes Master Signing Key with a `sig!` prefix. This verifies the authenticity of the Release Signing Key. Note that the `!` flag after the `sig` tag is important because it means that the key signature is valid. A `sig-` prefix would indicate a bad signature and `sig%` would mean that gpg encountered an error while verifying the signature. It is not necessary to independently verify the authenticity of the Release Signing Key, since you already verified the authenticity of the Qubes Master Signing Key. Before proceeding to the next step, make sure the Release Signing Key is in your keyring:"
msgstr ""

#: ../project-security/verifying-signatures.md:352
#: f8c46e3dab624494b82720261ab3061a
msgid "If you don't see the correct Release Signing Key here, go back and follow the instructions in this section carefully."
msgstr ""

#: ../project-security/verifying-signatures.md:355
#: 4bf407553add40c49f6b0e594b1466b9
msgid "3. Verify your Qubes ISO"
msgstr ""

#: ../project-security/verifying-signatures.md:357
#: b3e2b666ff9142aaa37fef23ae8062c3
msgid "Every Qubes ISO is released with a detached PGP signature file, which you can find on the [Downloads](/downloads/) page alongside the ISO. If the filename of your ISO is `Qubes-RX-x86_64.iso`, then the name of the signature file for that ISO is `Qubes-RX-x86_64.iso.asc`, where `X` is a specific version of Qubes. The signature filename is always the same as the ISO filename followed by `.asc`."
msgstr ""

#: ../project-security/verifying-signatures.md:363
#: 30e47b6190e24d5393d1f6b86dfa9130
msgid "Download both the ISO and its signature file. Put both of them in the same directory, then navigate to that directory. Now, you can verify the ISO by executing this GPG command in the directory that contains both files:"
msgstr ""

#: ../project-security/verifying-signatures.md:376
#: 290514b5d8a4476cb900827be0c29893
msgid "This is just an example, so the output you receive will not look exactly the same. What matters is the line that says `Good signature from \"Qubes OS Release X Signing Key\"`. This confirms that the signature on the ISO is good."
msgstr ""

#: ../project-security/verifying-signatures.md:380
#: 5b1a063c152b42a1bde7387c09da68e1
msgid "How to Verify Qubes ISO Digests"
msgstr ""

#: ../project-security/verifying-signatures.md:382
#: 74f3dc822fa248bcb7f3a44c022fe855
msgid "Each Qubes ISO is also accompanied by a plain text file ending in `.DIGESTS`. This file contains the output of running several different cryptographic hash functions on the ISO in order to obtain alphanumeric outputs known as \"digests\" or \"hash values.\" These hash values are provided as an alternative verification method to PGP signatures (though the digest file is itself also PGP-signed --- see below). If you've already verified the signatures on the ISO directly, then verifying digests is not necessary. You can find the `.DIGESTS` for your ISO on the [Downloads](/downloads/) page, and you can always find all the digest files for every Qubes ISO in the [Qubes Security Pack](/security/pack/)."
msgstr ""

#: ../project-security/verifying-signatures.md:392
#: a4bb5c6b2c2a46cbaafd55484f9bc6a8
msgid "If the filename of your ISO is `Qubes-RX-x86_64.iso`, then the name of the digest file for that ISO is `Qubes-RX-x86_64.iso.DIGESTS`, where `X` is a specific version of Qubes. The digest filename is always the same as the ISO filename followed by `.DIGESTS`. Since the digest file is a plain text file, you can open it with any text editor. Inside, you should find text that looks similar to this:"
msgstr ""

#: ../project-security/verifying-signatures.md:426
#: 7c98a33224464bd297b06fcb69e2ae86
msgid "Four digests have been computed for this ISO. The hash functions used, in order from top to bottom, are MD5, SHA1, SHA256, and SHA512. One way to verify that the ISO you downloaded matches any of these hash values is by using the respective `*sum` programs:"
msgstr ""

#: ../project-security/verifying-signatures.md:446
#: 8ce368cac4584c42ae427cd24a748c89
msgid "The `OK` response tells us that the hash value for that particular hash function matches. The program also warns us that there are 23 improperly formatted lines, but this is to be expected. This is because each file contains lines for several different hash values (as mentioned above), but each `*sum` program verifies only the line for its own hash function. In addition, there are lines for the PGP signature that the `*sum` programs do not know how to read. Therefore, it is safe to ignore these warning lines."
msgstr ""

#: ../project-security/verifying-signatures.md:454
#: 782794c2c4a1404ab80267f720f5f667
msgid "Another way is to use `openssl` to compute each hash value, then compare them to the contents of the digest file.:"
msgstr ""

#: ../project-security/verifying-signatures.md:468
#: 17c71fed6ed045a4a74bffc704ebb042
msgid "(Notice that the outputs match the values from the digest file.)"
msgstr ""

#: ../project-security/verifying-signatures.md:470
#: 5e3eb17bc01e4038bfb24e7c9440c3d1
msgid "However, it is possible that an attacker replaced `Qubes-RX-x86_64.iso` with a malicious ISO, computed the hash values for that malicious ISO, and replaced the values in `Qubes-RX-x86_64.iso.DIGESTS` with his own set of values. Therefore, we should also verify the authenticity of the listed hash values. Since `Qubes-RX-x86_64.iso.DIGESTS` is a clearsigned PGP file, we can use GPG to verify it from the command line:"
msgstr ""

#: ../project-security/verifying-signatures.md:480
#: 94ef043ae62c40018d57cbf5a621449a
msgid "Verify the signature in the digest file:"
msgstr ""

#: ../project-security/verifying-signatures.md:493
#: 61d8b82f7c1b4f07954ecdd17ac726b2
msgid "The signature is good. If our copy of the `Qubes OS Release X Signing Key` is being validated by the authentic Qubes Master Signing Key (see [above](#1-get-the-qubes-master-signing-key-and-verify-its-authenticity)), we can be confident that these hash values came from the Qubes devs."
msgstr ""

#: ../project-security/verifying-signatures.md:498
#: 97da8bd866e342fd9a26ddd378eba2fe
msgid "How to Verify Qubes Repos"
msgstr ""

#: ../project-security/verifying-signatures.md:500
#: e63b68d58836469ba545a338e40f247d
msgid "Whenever you use one of the [Qubes repositories](https://github.com/QubesOS), you should verify the PGP signature in a tag on the latest commit or on the latest commit itself. (One or both may be present, but only one is required.) If there is no trusted signed tag or commit on top, any commits after the latest trusted signed tag or commit should **not** be trusted. If you come across a repo with any unsigned commits, you should not add any of your own signed tags or commits on top of them unless you personally vouch for the trustworthiness of the unsigned commits. Instead, ask the person who pushed the unsigned commits to sign them."
msgstr ""

#: ../project-security/verifying-signatures.md:510
#: e3e82e8669d14492bcdeb5f13e7bf933
msgid "To verify a signature on a Git tag:"
msgstr ""

#: ../project-security/verifying-signatures.md:516
#: ../project-security/verifying-signatures.md:528
#: 9b0ff451fde84fcba9cc48a5d790a0cf
#: c5cf7c03593740a08751617bf8a8c6fc
msgid "or"
msgstr ""

#: ../project-security/verifying-signatures.md:522
#: 9f80a26bc86d4917aaadcdbb394585d2
msgid "To verify a signature on a Git commit:"
msgstr ""

#: ../project-security/verifying-signatures.md:534
#: 1fe6a985f48a4ca9b933eed1c21ebd7f
msgid "You should always perform this verification on a trusted local machine with properly validated keys (which are available in the [Qubes Security Pack](/security/pack/)) rather than relying on a third party, such as GitHub. While the GitHub interface may claim that a commit has a verified signature from a member of the Qubes team, this is only trustworthy if GitHub has performed the signature check correctly, the account identity is authentic, the user's key has not been replaced by an admin, GitHub's servers have not been compromised, and so on. Since there's no way for you to be certain that all such conditions hold, you're much better off verifying signatures yourself."
msgstr ""

#: ../project-security/verifying-signatures.md:544
#: f6fcc80e31084b9eb8dc4be495c56aa7
msgid "Also see: [Distrusting the Infrastructure](/faq/#what-does-it-mean-to-distrust-the-infrastructure)"
msgstr ""

#: ../project-security/verifying-signatures.md:547
#: 199135a81eaf48cbb235eabcd2aee020
msgid "Troubleshooting FAQ"
msgstr ""

#: ../project-security/verifying-signatures.md:549
#: 7751b5605dae44d39d29f11fbced0f64
msgid "Why am I getting \"Can't check signature: public key not found\"?"
msgstr ""

#: ../project-security/verifying-signatures.md:551
#: b0135ccb62f046cbaa16ab02b8a8ff73
msgid "You don't have the correct [Release Signing Key](#2-get-the-release-signing-key)."
msgstr ""

#: ../project-security/verifying-signatures.md:554
#: e64960ba25a84b22b3bfc95575d9382d
msgid "Why am I getting \"BAD signature from 'Qubes OS Release X Signing Key'\"?"
msgstr ""

#: ../project-security/verifying-signatures.md:556
#: d477b8f4c05d4daf8f3104aaf5756257
msgid "The problem could be one or more of the following:"
msgstr ""

#: ../project-security/verifying-signatures.md:558
#: 9a5d2c125b224f03911839738603fe7c
msgid "You're trying to verify the wrong file(s). Read this page again carefully."
msgstr ""

#: ../project-security/verifying-signatures.md:559
#: 0be0d587457444c49e38f21d26572754
msgid "You're using the wrong GPG command. Follow the examples in [Verify your Qubes ISO](#3-verify-your-qubes-iso) carefully."
msgstr ""

#: ../project-security/verifying-signatures.md:561
#: a536ff90f6c8448caef069c1af747326
msgid "The ISO or [signature file](#3-verify-your-qubes-iso) is bad (e.g., incomplete or corrupt download). Try downloading the signature file again from a different source, then try verifying again. If you still get the same result, try downloading the ISO again from a different source, then try verifying again."
msgstr ""

#: ../project-security/verifying-signatures.md:567
#: fe6c25a4b669457f972cef379ea949b1
msgid "Why am I getting \"bash: gpg2: command not found\"?"
msgstr ""

#: ../project-security/verifying-signatures.md:569
#: a84f5bd0a4ff450dbb21d042d893cb3a
msgid "You don't have `gpg2` installed. Please install it using the method appropriate for your environment (e.g., via your package manager)."
msgstr ""

#: ../project-security/verifying-signatures.md:572
#: 87de75ddd5724b55a26c5e7e8b7764cc
msgid "Why am I getting \"No such file or directory\"?"
msgstr ""

#: ../project-security/verifying-signatures.md:574
#: 2f3aa6764a6d44528d40f7f01427cddc
msgid "Your working directory does not contain the required files. Go back and follow the instructions more carefully, making sure that you put all required files in the same directory *and* navigate to that directory."
msgstr ""

#: ../project-security/verifying-signatures.md:578
#: 844a48be70234efb86d472a23cc271ad
msgid "Why am I getting \"can't open signed data `Qubes-RX-x86_64.iso' / can't hash"
msgstr ""

#: ../project-security/verifying-signatures.md:579
#: fe8f7f583beb474992212130db553979
msgid "datafile: file open error\"?"
msgstr ""

#: ../project-security/verifying-signatures.md:581
#: ../project-security/verifying-signatures.md:653
#: 478a6624fc434befb00e39cb37d8622c
#: d6fc1aaff308486a83286f7141c37a4a
msgid "The correct ISO is not in your working directory."
msgstr ""

#: ../project-security/verifying-signatures.md:583
#: 75d6c794268f44ada46c92d5293356e5
msgid "Why am I getting \"can't open `Qubes-RX-x86_64.iso.asc' / verify signatures"
msgstr ""

#: ../project-security/verifying-signatures.md:584
#: fd06c14b0a824af5b043de431e5310de
msgid "failed: file open error\"?"
msgstr ""

#: ../project-security/verifying-signatures.md:586
#: 74aee98241544a5ba437c0e4a23def6c
msgid "The correct [signature file](#3-verify-your-qubes-iso) is not in your working directory."
msgstr ""

#: ../project-security/verifying-signatures.md:589
#: 8338443d07b240d6b0dc929161d0311e
msgid "Why am I getting \"no valid OpenPGP data found\"?"
msgstr ""

#: ../project-security/verifying-signatures.md:591
#: 6a64e459e8974beb8a548aa7c9464afb
msgid "Either you don't have the correct [signature file](#3-verify-your-qubes-iso), or you inverted the arguments to `gpg2`. ([The signature file goes first.](#3-verify-your-qubes-iso))"
msgstr ""

#: ../project-security/verifying-signatures.md:595
#: 47465c1f60294641a7cfdc0b92237882
msgid "Why am I getting \"WARNING: This key is not certified with a trusted"
msgstr ""

#: ../project-security/verifying-signatures.md:596
#: e6bf036d647546c8a550d7ca20a8d3c9
msgid "signature! There is no indication that the signature belongs to the owner.\"?"
msgstr ""

#: ../project-security/verifying-signatures.md:598
#: d4faa00b88f54dee8f54d72fb04d5ae1
msgid "Either you don't have the [Qubes Master Signing Key](#1-get-the-qubes-master-signing-key-and-verify-its-authenticity), or you didn't [set its trust level correctly](#1-get-the-qubes-master-signing-key-and-verify-its-authenticity)."
msgstr ""

#: ../project-security/verifying-signatures.md:603
#: 07fc10c2a2c44cd4aa33c578371892fe
msgid "Why am I getting \"X signature not checked due to a missing key\"?"
msgstr ""

#: ../project-security/verifying-signatures.md:605
#: 457957eed3694c3a8bc1f937ee193c09
msgid "You don't have the keys that created those signatures in your keyring. For present purposes, you don't need them as long as you have the [Qubes Master Signing Key](#1-get-the-qubes-master-signing-key-and-verify-its-authenticity) and the [Release Signing Key](#2-get-the-release-signing-key) for your Qubes version."
msgstr ""

#: ../project-security/verifying-signatures.md:611
#: e5828a64c6884a878ba68f5a0fa46073
msgid "Why am I seeing additional signatures on a key with \"[User ID not found]\""
msgstr ""

#: ../project-security/verifying-signatures.md:612
#: a8a54779c63345899e22e629f4c5cee1
msgid "or from a revoked key?"
msgstr ""

#: ../project-security/verifying-signatures.md:614
#: 255cba62530540919e83a6e76ee3ecff
msgid "This is just a basic part of how OpenPGP works. Anyone can sign anyone else's public key and upload the signed public key to keyservers. Everyone is also free to revoke their own keys at any time (assuming they possess or can create a revocation certificate). This has no impact on verifying Qubes ISOs, code, or keys."
msgstr ""

#: ../project-security/verifying-signatures.md:620
#: 59502417fd724f92a130f544b7868ba6
msgid "Why am I getting \"verify signatures failed: unexpected data\"?"
msgstr ""

#: ../project-security/verifying-signatures.md:622
#: ../project-security/verifying-signatures.md:627
#: 5f5c6660e82c4cc1af195326fa18b22e
#: cf244ca8ec734e7a8bf7f9f3f7b8942b
msgid "You're not verifying against the correct [signature file](#3-verify-your-qubes-iso)."
msgstr ""

#: ../project-security/verifying-signatures.md:625
#: a13084675cf74ad1a6b5cdac2a6601cc
msgid "Why am I getting \"not a detached signature\"?"
msgstr ""

#: ../project-security/verifying-signatures.md:630
#: c3c5b3f2ed374e048a90fc355e73efe9
msgid "Why am I getting \"CRC error; [...] no signature found [...]\"?"
msgstr ""

#: ../project-security/verifying-signatures.md:632
#: 93436a06152c4dfcab54a7dfdec127e5
msgid "You're not verifying against the correct [signature file](#3-verify-your-qubes-iso), or the signature file has been modified. Try downloading it again or from a different source."
msgstr ""

#: ../project-security/verifying-signatures.md:636
#: 012fdd0294b44c4e93e716dca478cb1d
msgid "Do I have to verify the ISO against both the [signature"
msgstr ""

#: ../project-security/verifying-signatures.md:637
#: f276b0b7d79646e69eeb7238f7510c23
msgid "file](#3-verify-your-qubes-iso) and the [digest file](#how-to-verify-qubes-iso-digests)?"
msgstr ""

#: ../project-security/verifying-signatures.md:640
#: c7535670d435410fb4ace66e0bf04fc7
msgid "No, either method is sufficient by itself."
msgstr ""

#: ../project-security/verifying-signatures.md:642
#: 5648d034063a4a3aada804caa01ff176
msgid "Why am I getting \"no properly formatted X checksum lines found\"?"
msgstr ""

#: ../project-security/verifying-signatures.md:644
#: 0c6834cd50434f3f944b12d6fae0717e
msgid "You're not checking the correct [digest file](#how-to-verify-qubes-iso-digests)."
msgstr ""

#: ../project-security/verifying-signatures.md:647
#: 176f3216aa8f4fc6be7ae903688352b0
msgid "Why am I getting \"WARNING: X lines are improperly formatted\"?"
msgstr ""

#: ../project-security/verifying-signatures.md:649
#: 244eb01c10ae442c95fb623f08343f0a
msgid "Read [How to Verify Qubes ISO Digests](#how-to-verify-qubes-iso-digests) again."
msgstr ""

#: ../project-security/verifying-signatures.md:651
#: 97b0f9a72d9a4bf9862070a84868f3f9
msgid "Why am I getting \"WARNING: 1 listed file could not be read\"?"
msgstr ""

#: ../project-security/verifying-signatures.md:655
#: 68128a4d2fc1431788516670dfda90ac
msgid "I have another problem that isn't mentioned here."
msgstr ""

#: ../project-security/verifying-signatures.md:657
#: 97aad2e0f85e4353a7e603eabac590ef
msgid "Carefully read this page again to be certain that you didn't skip any steps. In particular, make sure you have the [Qubes Master Signing Key](#1-get-the-qubes-master-signing-key-and-verify-its-authenticity), the [Release Signing Key](#2-get-the-release-signing-key), *and* the [signature file](#3-verify-your-qubes-iso) and/or [digest file](#how-to-verify-qubes-iso-digests) all for the *correct* Qubes OS version. If your question is about GPG, please see the [GPG documentation](https://www.gnupg.org/documentation/). Still have question? Please see [Help, Support, Mailing Lists, and Forum](/support/) for places where you can ask!"
msgstr ""
