# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, test
# This file is distributed under the same license as the qubes-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: qubes-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-15 21:10+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../user/troubleshooting/pci-troubleshooting.md:9
#: ca8fc3c98c9645fa8da350309d7b0f7c
msgid "DMA errors"
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:11
#: a992b5dd9a3a474180b3a944922540c4
msgid "VMs with attached PCI devices in Qubes have allocated a small buffer for DMA operations (called swiotlb). By default, it is 2MB, but some devices (such as the [Realtek RTL8111DL Gigabit Ethernet Controller](https://groups.google.com/group/qubes-devel/browse_thread/thread/631c4a3a9d1186e3)) need a larger DMA buffer size. Without a larger buffer, you will face DMA errors such as `Failed to map TX DMA`."
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:15
#: 26ca0fe3a16145c2a542c90cec9e0dfa
msgid "To change this allocation, edit VM's kernel parameters (this is expressed in 512B chunks) by running the following in a dom0 terminal:"
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:23
#: 7715e48b94404bf283374d96e47788da
msgid "The `8192` value is the default value and some devices may require a larger value (like `16384`)."
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:25
#: 623616a676c8428bbaf3a20c9cfdbc49
msgid "PCI Passthrough Issues"
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:27
#: 205f924517d941baa6b9be610d9d6927
msgid "Sometimes the PCI arbitrator is too strict, which may cause errors such as `Unable to reset PCI device` and other PCI-related errors. There is a way to enable permissive mode for it. See also: [this thread](https://groups.google.com/forum/#!topic/qubes-users/Fs94QAc3vQI) and the Xen wiki's [PCI passthrough](https://wiki.xen.org/wiki/Xen_PCI_Passthrough) page. Other times, you may instead need to disable the FLR requirement on a device."
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:32
#: f8195a3c7e2e42f788a44a22026ffbbc
msgid "Both can be achieved during attachment with `qvm-pci` as described [PCI Devices documentation](/doc/how-to-use-pci-devices/#additional-attach-options)."
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:34
#: fc8be3e15fa24647abf3f25f8a386e22
msgid "\"Unable to reset PCI device\" errors"
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:36
#: f46411aa38084fdcb88f8a16a61271a7
msgid "libvirt.libvirtError: internal error: Unable to reset PCI device [...]: internal error: Active [...] devices on bus with [...], not doing bus reset"
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:38
#: e0d29a74228f44169d7071a604767373
msgid "After running `qvm-start sys-net`, you may encounter an error message which begins with `libvirt.libvirtError: internal error: Unable to reset PCI device`."
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:40
#: 25d578962dbe49e38bd0c549487f60c8
msgid "This issue is likely to occur if you have the same device assigned to more than one VM. When you try to start sys-net with the `qvm-start sys-net` command, there is already a VM running (e.g., auto-starting) with one or more of the same devices as those assigned to sys-net."
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:44
#: cae7174ef18b419baba9128bd5b92788
msgid "To fix the error, remove the offending PCI device."
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:46
#: 61eb6dcc5836453d913af7f58374779d
msgid "Using the Qubes interface"
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:48
#: 460db5d13c204de4b93a9ab667764ce2
msgid "From the \"Selected\" panel in sys-net, navigate to VM Settings, then Devices. There, you can remove the offending PCI device(s) and keep the desired PCI device."
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:50
#: 0964c176442d4a09afe138325572193c
msgid "Using the command line"
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:52
#: d04fed19ccca44a4b20d5f4c5cc82f59
msgid "To see all the PCI available devices, enter the `lspci` command into the dom0 terminal. Each device will be listed on a line, for example:"
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:58
#: e4b5fd84fcf24dad92425d9cc63458f1
msgid "In the above output, the BDF (Bus Device Function) of the device is `0000:03:00.0`"
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:60
#: 58ad07cf072248698b22999699190a32
msgid "Now that you can see all the PCI devices and their BDFs, you can decide which to remove and which to keep. Imagine we faced the following error message:"
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:67
#: 24658360ad4f4aaa8183f96d72c44ce3
msgid "In the above case, the device `0000:03:00.1` is the device which we want to use. But we are facing the `Unable to reset PCI device` error because another device, `0000:03:00.0`, is active.  To fix this error and get device `0000:03:00.1` to work, we must first remove the offending device `0000:03:00.0`."
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:75
#: 6d6241eb37d345ab9e48f8962b2195b9
msgid "In order to make this change persistent, create a file `/etc/systemd/system/qubes-pre-netvm.service` and add the following:"
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:91
#: 4d7f0ae09c54465cb9b747f80d295fce
msgid "Finally, run `systemctl enable qubes-pre-netvm.service` and it will now persist between reboots."
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:93
#: 9b08aca03dce4e4a801d980d8e5b0ae8
msgid "Domain [...] has failed to start: internal error: Unable to reset PCI device [...]: no FLR, PM reset or bus reset available"
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:95
#: 3aaf5d90e2194531abe1914bc1194c60
msgid "This is a [PCI passthrough issue](/doc/pci-troubleshooting/#pci-passthrough-issues), which occurs when PCI arbitrator is too strict. There is a way to enable permissive mode for it. Sometimes, you may instead need to disable the FLR requirement on a device. Both can be achieved during attachment with `qvm-pci` as described below."
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:100
#: e4e31bd858264957ab969448f3dc8fd3
msgid "NOTE: The `permissive` flag increases attack surface and possibility of [side channel attacks](https://en.wikipedia.org/wiki/Side-channel_attack). While using the `no-strict-reset` flag, do not require PCI device to be reset before attaching it to another VM. This may leak usage data even without malicious intent. Both `permissive` and `no-strict-reset` options may not be necessary and you should try one first, then the other, before using both."
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:107
#: cb944cac00824639a5700fa8b184b47f
msgid "Be sure to replace `<BDF_OF_DEVICE>` with the BDF of your PCI device, which can be be obtained from running `qvm-pci`."
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:109
#: 3a9bfb5a76194f09a93b93375996f0f3
msgid "You can also configure strict reset directly from the Qubes interface by following these steps:"
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:111
#: fe569a6950de42acbb02f4eefcba0274
msgid "Go to the sys-net VM settings"
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:113
#: a8ae5bf1c6404faf9ed34adcde8a3954
msgid "Go to Devices"
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:115
#: fd8b9c3d48094d069459cb195de526ae
msgid "Make sure the device is in the right field"
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:117
#: 2b7c028664d144a58ce1cccdff58de26
msgid "Click \"Configure strict reset for PCI devices\""
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:119
#: 0dac95cd65fe45b6847536371286938e
msgid "Select the device, click OK and apply"
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:121
#: ec99e29309fc41198afdae7d283c6381
msgid "Broadcom BCM43602 Wi-Fi card causes system freeze"
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:123
#: 13a320f721b24adc8d14b17ca4d9e28b
msgid "You may face the problem where the BCM43602 Wi-Fi chip causes a system freeze whenever it is attached to a VM. To fix this problem on a Macbook, follow the steps in [Macbook Troubleshooting](https://github.com/Qubes-Community/Contents/blob/master/docs/troubleshooting/macbook-troubleshooting.md#system-freezes-after-attaching-broadcom-bcm43602-wi-fi-card)."
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:125
#: 4f8a5679645d4c59a532876589bb2814
msgid "For other non-Macbook machines, it is advisable to replace the Broadcom BCM43602 with one known to work on Qubes, such as the Atheros AR9462."
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:127
#: 9127353417b24506a804670a8746c52b
msgid "Note that your computer manufacturer may have added a Wi-Fi card whitelist in your BIOS, which will prevent booting your computer if you have a non-listed wireless card. It is possible bypass this limitation by removing the whitelist, disabling a check for it or modifying the whitelist to replace device ID of a whitelisted WiFi card with device ID of your new WiFi card."
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:130
#: 4d5db715c9a742fca57607b2444b3527
msgid "Wireless card stops working after dom0 update"
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:132
#: ce71843bd8ad4180b0be7fd39b53cc96
msgid "There have been many instances where a Wi-Fi card stops working after a dom0 update. If you run `sudo dmesg` in sys-net, you may see errors beginning with `iwlwifi`. You can fix the problem by going to the sys-net VM's settings and changing the VM kernel to the previous version."
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:136
#: 62273e51289c46a89a5d15fcd65138b0
msgid "Attached devices in Windows HVM stop working on suspend/resume"
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:138
#: 27596afb359e4f83837b8df8fc5d924d
msgid "After the whole system gets suspended into S3 sleep and subsequently resumed, some attached devices may stop working. Refer to [Suspend/Resume Troubleshooting](/doc/suspend-resume-troubleshooting/#attached-devices-in-windows-hvm-stop-working-on-suspendresume) for a solution."
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:141
#: 802b03bead2b4058960a1105be263e2c
msgid "PCI device not available in dom0 after being unassigned from a qube"
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:143
#: 6e53f0ac75b34c41982bdc81065d9ba4
msgid "After you assign a PCI device to a qube, then unassign it/shut down the qube, the device is not available in dom0. This is an intended feature. A device which was previously assigned to a less trusted qube could attack dom0 if it were automatically reassigned there. Look at the [FAQs](/faq/#i-assigned-a-pci-device-to-a-qube-then-unassigned-itshut-down-the-qube-why-isnt-the-device-available-in-dom0) to learn how to re-enable the device in dom0."
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:148
#: f09b2334c4d54e4d8fcd76f5a4a46c35
msgid "Network adapter does not work"
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:150
#: 20ab07b8081f4b4e9e4327088bcb7b11
msgid "You may have an adapter (wired, wireless), that is not compatible with open-source drivers shipped by Qubes. You may need to install a binary blob, which provides drivers, from the linux-firmware package."
msgstr ""

#: ../user/troubleshooting/pci-troubleshooting.md:153
#: 97d8178acf07498298dd98d7a33db06b
msgid "Open a terminal and run `sudo dnf install linux-firmware` in the template upon which your NetVM is based. You have to restart the NetVM after the template has been shut down."
msgstr ""
