# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, test
# This file is distributed under the same license as the qubes-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Lars Schimmer <echelon@i2pmail.org>, 2021
# Naut tilus <trmct@posteo.sg>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: qubes-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-15 16:25+0100\n"
"PO-Revision-Date: 2021-12-15 15:06+0000\n"
"Last-Translator: Naut tilus <trmct@posteo.sg>, 2021\n"
"Language-Team: German (https://www.transifex.com/otf/teams/56717/de/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../_doc/user/security-in-qubes/split-gpg.md:19
#: eda4601712e5401fbfe26749cdd7dcce
msgid ""
"Split GPG implements a concept similar to having a smart card with your "
"private GPG keys, except that the role of the \"smart card\" is played by "
"another Qubes app qube. This way one not-so-trusted domain, e.g. the one "
"where Thunderbird is running, can delegate all crypto operations -- such as "
"encryption/decryption and signing -- to another, more trusted, network-"
"isolated domain. This way the compromise of your domain where Thunderbird or"
" another client app is running -- arguably a not-so-unthinkable scenario -- "
"does not allow the attacker to automatically also steal all your keys. (We "
"should make a rather obvious comment here that the so-often-used passphrases"
" on private keys are pretty meaningless because the attacker can easily set "
"up a simple backdoor which would wait until the user enters the passphrase "
"and steal the key then.)"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:24
#: b9caf225e26f4f40a0154a1f6c1f5568
msgid ""
"[![split-gpg-diagram.png](/attachment/doc/split-gpg-"
"diagram.png)](/attachment/doc/split-gpg-diagram.png)"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:26
#: 0c9b0a952e19428f816f019f06f62993
msgid "This diagram presents an overview of the Split GPG architecture."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:28
#: 887f62c87d184043b8f1ba4fee6ba32f
msgid "Advantages of Split GPG vs. traditional GPG with a smart card"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:30
#: e1090bf3570d4b9faaff08c5220728b7
msgid ""
"It is often thought that the use of smart cards for private key storage "
"guarantees ultimate safety. While this might be true (unless the attacker "
"can find a usually-very-expensive-and-requiring-physical-presence way to "
"extract the key from the smart card) but only with regards to the safety of "
"the private key itself. However, there is usually nothing that could stop "
"the attacker from requesting the smart card to perform decryption of all the"
" user documents the attacker has found or need to decrypt. In other words, "
"while protecting the user's private key is an important task, we should not "
"forget that ultimately it is the user data that are to be protected and that"
" the smart card chip has no way of knowing the requests to decrypt documents"
" are now coming from the attacker's script and not from the user sitting in "
"front of the monitor. (Similarly the smart card doesn't make the process of "
"digitally signing a document or a transaction in any way more secure -- the "
"user cannot know what the chip is really signing. Unfortunately this problem"
" of signing reliability is not solvable by Split GPG)"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:37
#: 90ce4e86fcd741b9917528768e06d202
msgid ""
"With Qubes Split GPG this problem is drastically minimized, because each "
"time the key is to be used the user is asked for consent (with a definable "
"time out, 5 minutes by default), plus is always notified each time the key "
"is used via a tray notification from the domain where GPG backend is "
"running. This way it would be easy to spot unexpected requests to decrypt "
"documents."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:40
#: acb2593b94a54e199bafc5bc7ba26981
msgid ""
"[![r2-split-gpg-1.png](/attachment/doc/r2-split-"
"gpg-1.png)](/attachment/doc/r2-split-gpg-1.png) [![r2-split-"
"gpg-3.png](/attachment/doc/r2-split-gpg-3.png)](/attachment/doc/r2-split-"
"gpg-3.png)"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:43
#: 87518ec116554b81a88e9e0065d4c8a4
msgid "Configuring Split GPG"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:45
#: f8bc2e3fcf2c4bdd960177c7764d5632
msgid "In dom0, make sure the `qubes-gpg-split-dom0` package is installed."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:51
#: cff19611ed7d4aa088972f3d194fd5d4
msgid ""
"Make sure you have the `qubes-gpg-split` package installed in the template "
"you will use for the GPG domain."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:53
#: 36ad47d411864f30b365b5d7242eb2d7
msgid "For Debian or Whonix:"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:59
#: 7a2c4d3072754fe9b8f05ccdb81deee5
msgid "For Fedora:"
msgstr "FÃ¼r Fedora:"

#: ../../_doc/user/security-in-qubes/split-gpg.md:65
#: 8d12f2f032de448896af3aed65f4d057
msgid "Setting up the GPG backend domain"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:67
#: 295d84210240407dbc9693b3725c90a5
msgid ""
"First, create a dedicated app qube for storing your keys (we will be calling"
" it the GPG backend domain). It is recommended that this domain be network "
"disconnected (set its netvm to `none`) and only used for this one purpose. "
"In later examples this app qube is named `work-gpg`, but of course it might "
"have any other name."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:71
#: 2d0081cfa1d54c1f8783b6a9cd2d206c
msgid ""
"Make sure that gpg is installed there. At this stage you can add the private"
" keys you want to store there, or you can now set up Split GPG and add the "
"keys later. To check which private keys are in your GPG keyring, use:"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:85
#: c578b27a551c4b0ab717e9bde15b9ccd
msgid ""
"This is pretty much all that is required. However, you might want to modify "
"the default timeout: this tells the backend for how long the user's approval"
" for key access should be valid. (The default is 5 minutes.) You can change "
"this via the `QUBES_GPG_AUTOACCEPT` environment variable. You can override "
"it e.g. in `~/.profile`:"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:94
#: cc06112e13a74bd6828caf9a64cd0ed9
msgid ""
"Please note that previously, this parameter was set in ~/.bash_profile. This"
" will no longer work. If you have the parameter set in ~/.bash_profile you "
"*must* update your configuration."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:98
#: 35dad981ef0043b39ab5b278e372ba6c
msgid ""
"Please be aware of the caveat regarding passphrase-protected keys in the "
"[Current limitations](#current-limitations) section."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:100
#: a73fe9ae26634574a92106b5d44deabd
msgid "Configuring the client apps to use Split GPG backend"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:102
#: 8167d0143d4b491bbb8a6f34c720047c
msgid ""
"Normally it should be enough to set the `QUBES_GPG_DOMAIN` to the GPG "
"backend domain name and use `qubes-gpg-client` in place of `gpg`, e.g.:"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:119
#: 346d468753a34a999de1917a7317fba3
msgid ""
"Note that running normal `gpg -K` in the demo above shows no private keys "
"stored in this app qube."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:121
#: 52dddd609cae4d96a28218434b1d787f
msgid "A note on `gpg` and `gpg2`:"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:123
#: 2f2b61e59a8c45349f3269620c8933fe
msgid ""
"Throughout this guide, we refer to `gpg`, but note that Split GPG uses "
"`gpg2` under the hood for compatibility with programs like Enigmail (which "
"now supports only `gpg2`). If you encounter trouble while trying to set up "
"Split GPG, make sure you're using `gpg2` for your configuration and testing,"
" since keyring data may differ between the two installations."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:126
#: b3afff45eaf647c3a874180635adfc46
msgid "Advanced Configuration"
msgstr "Erweiterte Einstellungen"

#: ../../_doc/user/security-in-qubes/split-gpg.md:128
#: b8a2f1da5ad449b3838cccb8e63ba99d
msgid ""
"The `qubes-gpg-client-wrapper` script sets the `QUBES_GPG_DOMAIN` variable "
"automatically based on the content of the file `/rw/config/gpg-split-"
"domain`, which should be set to the name of the GPG backend VM. This file "
"survives the app qube reboot, of course."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:135
#: 4f91aa5ebcd94c139fa0fc00b8df5806
msgid ""
"Split GPG's default qrexec policy requires the user to enter the name of the"
" app qube containing GPG keys on each invocation. To improve usability for "
"applications like Thunderbird with Enigmail, in `dom0` place the following "
"line at the top of the file `/etc/qubes-rpc/policy/qubes.Gpg`:"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:141
#: 0cc7f8f7ce0c4d808d1d87092c632451
msgid ""
"where `work-email` is the Thunderbird + Enigmail app qube and `work-gpg` "
"contains your GPG keys."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:143
#: 77786efac8794ac89aab5d0ed5250c6b
msgid ""
"You may also edit the qrexec policy file for Split GPG in order to tell "
"Qubes your default gpg vm (qrexec prompts will appear with the gpg vm "
"preselected as the target, instead of the user needing to type a name in "
"manually). To do this, append `,default_target=<vmname>` to `ask` in "
"`/etc/qubes-rpc/policy/qubes.Gpg`. For the examples given on this page:"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:149
#: 143c8ee63c484842a263e38410db93f5
msgid ""
"Note that, because this makes it easier to accept Split GPG's qrexec "
"authorization prompts, it may decrease security if the user is not careful "
"in reviewing presented prompts. This may also be inadvisable if there are "
"multiple app qubes with Split GPG set up."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:151
#: 4fb77c41c4274b67bf0bdcd00af203b3
msgid "Using Thunderbird"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:153
#: 7f2551e1a21840cfb3d30987b76aa2ec
msgid "Thunderbird 78 and higher"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:155
#: b3c46d225b274739a11ed1e9183b1890
msgid ""
"Starting with version 78, Thunderbird has a built-in PGP feature and no "
"longer requires the Enigmail extension. For users coming from the Enigmail "
"extension, the built-in functionality is more limited currently, including "
"that **public keys must live in your `work-email` qube with Thunderbird "
"rather than your offline `work-gpg` qube**."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:157
#: f23aa3f59c4746e6bb60022becbe3bcd
msgid ""
"In `work-email`, use the Thunderbird config editor (found at the bottom of "
"preferences/options), and search for `mail.openpgp.allow_external_gnupg`. "
"Switch the value to true. Still in config editor, search for "
"`mail.openpgp.alternative_gpg_path`. Set its value to `/usr/bin/qubes-gpg-"
"client-wrapper`. Restart Thunderbird after this change."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:159
#: 0f4fad97d9e04f48b88a71e5b9facc13
msgid ""
"[![tb78-1.png](/attachment/doc/tb78-1.png)](/attachment/doc/tb78-1.png) "
"[![tb78-2.png](/attachment/doc/tb78-2.png)](/attachment/doc/tb78-2.png) "
"[![tb78-3.png](/attachment/doc/tb78-3.png)](/attachment/doc/tb78-3.png)"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:163
#: e1fa2b81e60d41d8897d4b916efa5d35
msgid ""
"You need to obtain your key ID which should be **exactly 16 characters**. "
"Enter the command `qubes-gpg-client-wrapper -K --keyid-format long`:"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:179
#: bdd8f33adb56450fa4661329fd8a7b5e
msgid ""
"Open the Account Settings and open the *End-to-End Encryption* tab of the "
"respective email account. Click the *Add Key* button. You'll be offered the "
"choice *Use your external key through GnuPG*. Select it and click Continue."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:181
#: c2d84d3cf398479db7a4a5a68dd7096c
msgid ""
"[![tb78-4.png](/attachment/doc/tb78-4.png)](/attachment/doc/tb78-4.png) "
"[![tb78-5.png](/attachment/doc/tb78-5.png)](/attachment/doc/tb78-5.png)"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:184
#: 98012708d6a7485bb4fd6ed9177274e7
msgid ""
"The key ID reference you would need here is `777402E6D301615C`. Now paste or"
" type the ID of the secret key that you would like to use. Be careful to "
"enter it correctly, because your input isn't verified. Confirm to save this "
"key ID. Now you can select the key ID to use."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:186
#: 892f69a705074f369ccfcd301c798b6b
msgid ""
"[![tb78-6.png](/attachment/doc/tb78-6.png)](/attachment/doc/tb78-6.png) "
"[![tb78-7.png](/attachment/doc/tb78-7.png)](/attachment/doc/tb78-7.png)"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:189
#: db88db6a552440358a4d1bf9dd0bc017
msgid ""
"This key ID will be used to digitally sign or send an encrypted message with"
" your account. For this to work, Thunderbird needs a copy of your public "
"key. At this time, Thunderbird doesn't fetch the public key from "
"`/usr/bin/qubes-gpg-client-wrapper`, you must manually import it. Export the"
" key as follow (assuming the key ID would be `777402E6D301615C`):"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:191
#: b4cf71da82d6414ab28111942e468ef9
msgid ""
"[![tb78-8.png](/attachment/doc/tb78-8.png)](/attachment/doc/tb78-8.png) "
"[![tb78-9.png](/attachment/doc/tb78-9.png)](/attachment/doc/tb78-9.png)"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:194
#: c38f6e7937fa4422a938ff8163f0087c
msgid ""
"Use Thunderbird's Tools menu to open *OpenPGP Key Management*. In that "
"window, use the File menu to access the *Import Public Key(s) From File* "
"command. Open the file with your public key. After the import was "
"successful, right click on the imported key in the list and select *Key "
"Properties*. You must mark your own key as *Yes, I've verified in person "
"this key has the correct fingerprint*."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:196
#: 591c7bedb9884b0d90525b45ea0ddc86
msgid ""
"Once this is done, you should be able to send an encrypted and signed email "
"by selecting *Require Encryption* or *Digitally Sign This Message* in the "
"compose menu *Options* or *Security* toolbar button. You can try it by "
"sending an email to yourself."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:198
#: 9dd3b142fc3b49709f5797be7200512c
msgid ""
"[![tb78-10.png](/attachment/doc/tb78-10.png)](/attachment/doc/tb78-10.png)"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:200
#: ce9c1f23bbc348b4b207827b6eada022
msgid ""
"For more details about using smart cards/Split GPG with Thunderbird PGP "
"feature, please see "
"[Thunderbird:OpenPGP:Smartcards](https://wiki.mozilla.org/Thunderbird:OpenPGP:Smartcards)"
" from which the above documentation is inspired."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:202
#: c00f0d4d253247b58ed786cd39b6b05d
msgid "Older Thunderbird versions"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:204
#: 491698b4245f4802b91d88b913410a8c
msgid ""
"For Thunderbird versions below 78, the traditional Enigmail + Split GPG "
"setup is required. It is recommended to set up and use `/usr/bin/qubes-gpg-"
"client-wrapper`, as discussed above, in Thunderbird through the Enigmail "
"addon."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:207
#: c6fcb6d631f945599ec98f9d5cdf7482
msgid ""
"**Warning:** Before adding any account, configuring Enigmail with "
"`/usr/bin/qubes-gpg-client-wrapper` is **required**. By default, Enigmail "
"will generate a default GPG key in `work-email` associated with the newly "
"created Thunderbird account. Generally, it corresponds to the email used in "
"`work-gpg` associated to your private key. In consequence, a new, separate "
"private key will be stored in `work-email` but it _does not_ correspond to "
"your private key in `work-gpg`. Comparing the `fingerprint` or `expiration "
"date` will show that they are not the same private key. In order to prevent "
"Enigmail using this default generated local key in `work-email`, you can "
"safely remove it."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:209
#: 4e097c5bfb334beaae1d860ba21e0267
msgid ""
"On a fresh Enigmail install, your need to change the default `Enigmail "
"Junior Mode`. Go to Thunderbird preferences and then privacy tab. Select "
"`Force using S/MIME and Enigmail`. Then, in the preferences of Enigmail, "
"make it point to `/usr/bin/qubes-gpg-client-wrapper` instead of the standard"
" GnuPG binary:"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:211
#: 8e2f313b8c6a4279a212e872b02f93f7
msgid ""
"[![tb-enigmail-split-gpg-settings-2.png](/attachment/doc/tb-enigmail-split-"
"gpg-settings-2.png)](/attachment/doc/tb-enigmail-split-gpg-settings-2.png)"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:213
#: 77f5a56e14a44ee6954e45ec03cae45f
msgid "Using Keybase with Split GPG"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:215
#: c452cf1a9fd34814b2931741a79da22c
msgid ""
"Keybase, a security focused messaging and file-sharing app with GPG "
"integration, can be configured to use Split GPG."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:217
#: 32edf7fa084f4efea5b6e8e72a25938d
msgid ""
"The Keybase service does not preserve/pass the `QUBES_GPG_DOMAIN` "
"environment variable through to underlying GPG processes, so it **must** be "
"configured to use `/usr/bin/qubes-gpg-client-wrapper` (as discussed above) "
"rather than `/usr/bin/qubes-gpg-client`."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:219
#: 94a2483be06545b298ac781014f03d6f
msgid ""
"The following command will configure Keybase to use `/usr/bin/qubes-gpg-"
"client-wrapper` instead of its built-in GPG client:"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:225
#: cc2f02c45b38468c87691a85c2c73f69
msgid ""
"Now that Keybase is configured to use `qubes-gpg-client-wrapper`, you will "
"be able to use `keybase pgp select` to choose a GPG key from your backend "
"GPG app qube and link that key to your Keybase identity."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:227
#: 0a4384b2da3543ccbec60f39a75930af
msgid "Using Git with Split GPG"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:229
#: 5f03e58051024552ba7c8213855f9ced
msgid ""
"Git can be configured to used with Split GPG, something useful if you would "
"like to contribute to the Qubes OS Project as every commit is required to be"
" signed. The most basic `~/.gitconfig` file to with working Split GPG looks "
"something like this."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:242
#: 5f19099ae36a4b17bd8d416dbe812ccc
msgid ""
"Your key id is the public id of your signing key, which can be found by "
"running `qubes-gpg-client -k`. In this instance, the key id is DD160C74."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:253
#: 497a452624ec4831ab8557ffc2a77aee
msgid ""
"To sign commits, you now add the \"-S\" flag to your commit command, which "
"should prompt for Split GPG usage. If you would like automatically sign all "
"commits, you can add the following snippet to `~/.gitconfig`."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:261
#: a1544afaa3804831b0a15dda09e317e8
msgid ""
"Lastly, if you would like to add aliases to sign and verify tags using the "
"conventions the Qubes OS Project recommends, you can add the following "
"snippet to `~/.gitconfig`."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:269
#: 9b19d10258334db5aafcf760371a8954
msgid ""
"Replace `user` with your short, unique nickname. Now you can use `git stag` "
"to add a signed tag to a commit and `git vtag` to verify the most recent tag"
" that is reachable from a commit."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:272
#: 518bc2c418974a8da0c723b192f41432
msgid "Importing public keys"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:274
#: adf14efcdd8f4cb68b52db416fe8a819
msgid ""
"Use `qubes-gpg-import-key` in the client app qube to import the key into the"
" GPG backend VM."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:281
#: 2f2c3be1e6b64762b69ab1733daabd53
msgid "A safe, unspoofable user consent dialog box is displayed."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:283
#: ad0175b1d0f6443085b98d938d5967ab
msgid ""
"[![r2-split-gpg-5.png](/attachment/doc/r2-split-"
"gpg-5.png)](/attachment/doc/r2-split-gpg-5.png)"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:285
#: e6d16f83a5b244e082674565b11b6538
msgid ""
"Selecting \"Yes to All\" will add a line in the corresponding [RPC "
"Policy](/doc/rpc-policy/) file."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:287
#: dca15cdab89241e792b35922cf16d741
msgid "Advanced: Using Split GPG with Subkeys"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:289
#: f712a5985d5945abaca8a60a2933a03d
msgid ""
"Users with particularly high security requirements may wish to use Split GPG"
" with [subkeys](https://wiki.debian.org/Subkeys). However, this setup comes "
"at a significant cost: It will be impossible to sign other people's keys "
"with the master secret key without breaking this security model. "
"Nonetheless, if signing others' keys is not required, then Split GPG with "
"subkeys offers unparalleled security for one's master secret key."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:293
#: 9e1ae4ea57424c43aca48b8fcd2f356b
msgid "Setup Description"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:295
#: 3a4b2c819d864935908651fd2c0a0f32
msgid ""
"In this example, the following keys are stored in the following locations "
"(see below for definitions of these terms):"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:0
#: 2a3e106d275f4b22ae2871174e1190b1
msgid "PGP Key(s)"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:0
#: 6d7ef644715440bcb5c71415e6f0d967
msgid "VM Name"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:0
#: f6c91dfe44784403b3c441b2ade0284a
msgid "`sec`"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:0
#: ../../_doc/user/security-in-qubes/split-gpg.md:339
#: 6512cbb3acea4fdda60495225c352119 5c41ea76f8f44e1cafaa6e6eabfd0bc5
msgid "`vault`"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:0
#: 3023065ae14446b08f320166b496d9f7
msgid "`ssb`"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:0
#: ../../_doc/user/security-in-qubes/split-gpg.md:346
#: 7bd1969d053f46bba7af3f79797d6153 304f4a6e2cef416da363c85e15cbe155
msgid "`work-gpg`"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:0
#: ab955b517b2f48339e1a1cf3f909db2e
msgid "`pub`"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:0
#: ../../_doc/user/security-in-qubes/split-gpg.md:353
#: 1f4c3da61d19445fa306d6427e07b7e8 823c4465af89406abfe77d4bb4723e4e
msgid "`work-email`"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:303
#: 16b91eadce334b0dac42cbf38fa4041c
msgid "`sec` (master secret key)"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:305
#: 170ccf1adc2845dda1a982f931b9350f
msgid ""
"Depending on your needs, you may wish to create this as a **certify-only "
"(C)** key, i.e., a key which is capable only of signing (a.k.a., "
"\"certifying\") other keys.  This key may be created *without* an expiration"
" date.  This is for two reasons.  First, the master secret key is never to "
"leave the `vault` VM, so it is extremely unlikely ever to be obtained by an "
"adversary (see below).  Second, an adversary who *does* manage to obtain the"
" master secret key either possesses the passphrase to unlock the key (if one"
" is used) or does not.  An adversary who *does* possess the passphrase can "
"simply use it to legally extend the expiration date of the key (or remove it"
" entirely).  An adversary who does *not* possess the passphrase cannot use "
"the key at all.  In either case, an expiration date provides no additional "
"benefit."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:314
#: b7a1f677ef954c8e948ea77142287099
msgid ""
"By the same token, however, having a passphrase on the key is of little "
"value.  An adversary who is capable of stealing the key from your `vault` "
"would almost certainly also be capable of stealing the passphrase as you "
"enter it.  An adversary who obtains the passphrase can then use it in order "
"to change or remove the passphrase from the key.  Therefore, using a "
"passphrase at all should be considered optional.  It is, however, "
"recommended that a **revocation certificate** be created and safely stored "
"in multiple locations so that the master keypair can be revoked in the "
"(exceedingly unlikely) event that it is ever compromised."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:320
#: a21eecde7f094bb9b205dfe3a04745d1
msgid "`ssb` (secret subkey)"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:322
#: 29d9538b3864443c85fd14c350b7881e
msgid ""
"Depending on your needs, you may wish to create two different subkeys: one "
"for **signing (S)** and one for **encryption (E)**.  You may also wish to "
"give these subkeys reasonable expiration dates (e.g., one year).  Once these"
" keys expire, it is up to you whether to *renew* these keys by extending the"
" expiration dates or to create *new* subkeys when the existing set expires."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:326
#: ffec5e11dd0e49dda53b444a3402a101
msgid ""
"On the one hand, an adversary who obtains any existing encryption subkey "
"(for example) will be able to use it in order to decrypt all emails (for "
"example) which were encrypted to that subkey.  If the same subkey were to "
"continue to be used--and its expiration date continually extended--only that"
" one key would need to be stolen (e.g., as a result of the `work-gpg` VM "
"being compromised; see below) in order to decrypt *all* of the user's "
"emails.  If, on the other hand, each encryption subkey is used for at most "
"approximately one year, then an adversary who obtains the secret subkey will"
" be capable of decrypting at most approximately one year's worth of emails."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:330
#: e58e8200ec194bafa95d5e4d57f98070
msgid ""
"On the other hand, creating a new signing subkey each year without renewing "
"(i.e., extending the expiration dates of) existing signing subkeys would "
"mean that all of your old signatures would eventually read as \"EXPIRED\" "
"whenever someone attempts to verify them.  This can be problematic, since "
"there is no consensus on how expired signatures should be handled.  "
"Generally, digital signatures are intended to last forever, so this is a "
"strong reason against regularly retiring one's signing subkeys."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:334
#: 2bea57b514b546579cd1c8c333d12b01
msgid "`pub` (public key)"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:336
#: fd4912f0590642b683f66d2e47ef207b
msgid ""
"This is the complement of the master secret key.  It can be uploaded to "
"keyservers (or otherwise publicly distributed) and may be signed by others."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:341
#: 8ec17e625a4a4d5588d661d76b5beef4
msgid ""
"This is a network-isolated VM.  The initial master keypair and subkeys are "
"generated in this VM.  The master secret key *never* leaves this VM under "
"*any* circumstances.  No files or text is *ever* [copied](/doc/how-to-copy-"
"and-move-files/#security) or [pasted](/doc/how-to-copy-and-paste-"
"text/#security) into this VM under *any* circumstances."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:348
#: 2e10df39fb524b54bda91edcaae70a6b
msgid ""
"This is a network-isolated VM.  This VM is used *only* as the GPG backend "
"for `work-email`.  The secret subkeys (but *not* the master secret key) are "
"[copied](/doc/how-to-copy-and-move-files/#security) from the `vault` VM to "
"this VM.  Files from less trusted VMs are *never* [copied](/doc/how-to-copy-"
"and-move-files/#security) into this VM under *any* circumstances."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:355
#: 006bb4261020490c9d5bcc1c0dc5ca06
msgid ""
"This VM has access to the mail server.  It accesses the `work-gpg` VM via "
"the Split GPG protocol.  The public key may be stored in this VM so that it "
"can be attached to emails and for other such purposes."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:359
#: 0b7e3dbf252f4ec68fa22a41ddb03d75
msgid "Security Benefits"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:361
#: c08152a98d6c4801994b604087081a0f
msgid ""
"In the standard Split GPG setup, there are at least two ways in which the "
"`work-gpg` VM might be compromised. First, an attacker who is capable of "
"exploiting a hypothetical bug in `work-email`'s "
"[MUA](https://en.wikipedia.org/wiki/Mail_user_agent) could gain control of "
"the `work-email` VM and send a malformed request which exploits a "
"hypothetical bug in the GPG backend (running in the `work-gpg` VM), giving "
"the attacker control of the `work-gpg` VM. Second, a malicious public key "
"file which is imported into the `work-gpg` VM might exploit a hypothetical "
"bug in the GPG backend which is running there, again giving the attacker "
"control of the `work-gpg` VM. In either case, such an attacker might then be"
" able to leak both the master secret key and its passphrase (if any is used,"
" it would regularly be input in the work-gpg VM and therefore easily "
"obtained by an attacker who controls this VM) back to the `work-email` VM or"
" to another VM (e.g., the `netvm`, which is always untrusted by default) via"
" the Split GPG protocol or other [covert channels](/doc/data-leaks/). Once "
"the master secret key is in the `work-email` VM, the attacker could simply "
"email it to himself (or to the world)."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:367
#: c3e02ac84f8341f7bbe62d76db8bc6dd
msgid ""
"In the alternative setup described in this section (i.e., the subkey setup),"
" even an attacker who manages to gain access to the `work-gpg` VM will not "
"be able to obtain the user's master secret key since it is simply not there."
" Rather, the master secret key remains in the `vault` VM, which is extremely"
" unlikely to be compromised, since nothing is ever copied or transferred "
"into it. <sup>\\*</sup> The attacker might nonetheless be able to leak the "
"secret subkeys from the `work-gpg` VM in the manner described above, but "
"even if this is successful, the secure master secret key can simply be used "
"to revoke the compromised subkeys and to issue new subkeys in their place. "
"(This is significantly less devastating than having to create a new *master*"
" keypair.)"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:372
#: 0958322f8c1d4e97b4e8d256f53deed7
msgid ""
"<sup>\\*</sup>In order to gain access to the `vault` VM, the attacker would "
"require the use of, e.g., a general Xen VM escape exploit or a [signed, "
"compromised package which is already installed in the "
"template](/doc/templates/#trusting-your-templates) upon which the `vault` VM"
" is based."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:374
#: f6dbcdd4b9244580bcd24661e4750a52
msgid "Subkey Tutorials and Discussions"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:376
#: cf342622c55042838ee2addccb997ef3
msgid ""
"(Note: Although the tutorials below were not written with Qubes Split GPG in"
" mind, they can be adapted with a few commonsense adjustments. As always, "
"exercise caution and use your good judgment.)"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:379
#: f8026208dd6e4e78bece06c206ceec19
msgid ""
"[\"OpenPGP in Qubes OS\" on the qubes-users mailing "
"list](https://groups.google.com/d/topic/qubes-users/Kwfuern-R2U/discussion)"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:380
#: 6dbb86b24cd9429da8a56e8e63736131
msgid ""
"[\"Creating the Perfect GPG Keypair\" by Alex "
"Cabal](https://alexcabal.com/creating-the-perfect-gpg-keypair/)"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:381
#: 2f2263ec0e274c098b03e15f7140cd02
msgid ""
"[\"GPG Offline Master Key w/ smartcard\" maintained by Abel "
"Luck](https://gist.github.com/abeluck/3383449)"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:382
#: 5f45faa151ea4a4091d7f131bebe14e5
msgid ""
"[\"Using GnuPG with QubesOS\" by "
"Alex](https://apapadop.wordpress.com/2013/08/21/using-gnupg-with-qubesos/)"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:384
#: cb6238d97235464e82cb02a723f29ec9
msgid "Current limitations"
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:386
#: e2f1e14f29564a02a3f82e799fa30f3d
msgid ""
"Current implementation requires importing of public keys to the vault "
"domain. This opens up an avenue to attack the gpg running in the backend "
"domain via a hypothetical bug in public key importing code. See ticket "
"[#474](https://github.com/QubesOS/qubes-issues/issues/474) for more details "
"and plans how to get around this problem, as well as the section on [using "
"Split GPG with subkeys](#advanced-using-split-gpg-with-subkeys)."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:390
#: fe6e06f47ce941a6a4f58595cf444910
msgid ""
"It doesn't solve the problem of allowing the user to know what is to be "
"signed before the operation gets approved. Perhaps the GPG backend domain "
"could start a disposable and have the to-be-signed document displayed there?"
" To Be Determined."
msgstr ""

#: ../../_doc/user/security-in-qubes/split-gpg.md:393
#: c04af3f8d97b4fd3a8f00736e6c31c66
msgid ""
"The Split GPG client will fail to sign or encrypt if the private key in the "
"GnuPG backend is protected by a passphrase. It will give an `Inappropriate "
"ioctl for device` error. Do not set passphrases for the private keys in the "
"GPG backend domain. Doing so won't provide any extra security anyway, as "
"explained in the introduction and in [using Split GPG with "
"subkeys](#advanced-using-split-gpg-with-subkeys). If you are generating a "
"new key pair, or if you have a private key that already has a passphrase, "
"you can use `gpg2 --edit-key <key_id>` then `passwd` to set an empty "
"passphrase. Note that `pinentry` might show an error when you try to set an "
"empty passphrase, but it will still make the change. (See [this "
"StackExchange answer](https://unix.stackexchange.com/a/379373) for more "
"information.) Note: The error shows only if you **do not** have graphical "
"pinentry installed."
msgstr ""
