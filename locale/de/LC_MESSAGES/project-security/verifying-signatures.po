# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, test
# This file is distributed under the same license as the qubes-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Ettore Atalan <atalanttore@googlemail.com>, 2021
# erinm, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: qubes-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-15 16:25+0100\n"
"PO-Revision-Date: 2021-12-15 15:11+0000\n"
"Last-Translator: erinm, 2021\n"
"Language-Team: German (https://www.transifex.com/otf/teams/56717/de/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../_doc/project-security/verifying-signatures.md:14
#: 5ed5bfbc20894878b839152733b8d40a
msgid "What Digital Signatures Can and Cannot Prove"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:16
#: d1bc1378054e434ab1b17f72cfa98d85
msgid ""
"Most people --- even programmers --- are confused about the basic concepts "
"underlying digital signatures. Therefore, most people should read this "
"section, even if it looks trivial at first sight."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:20
#: 39365b48b895414cb88e3c404725e6e5
msgid ""
"Digital signatures can prove both **authenticity** and **integrity** to a "
"reasonable degree of certainty. **Authenticity** ensures that a given file "
"was indeed created by the person who signed it (i.e., that it was not forged"
" by a third party). **Integrity** ensures that the contents of the file have"
" not been tampered with (i.e., that a third party has not undetectably "
"altered its contents *en route*)."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:27
#: 1adc061616bf47d5a8ffa2e0a31b0c4e
msgid ""
"Digital signatures **cannot** prove any other property, e.g., that the "
"signed file is not malicious. In fact, there is nothing that could stop "
"someone from signing a malicious program (and it happens from time to time "
"in reality)."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:31
#: 5bbd87d0358148e38b51ce31947fdedb
msgid ""
"The point is that we must decide who we will trust (e.g., Linus Torvalds, "
"Microsoft, or the Qubes Project) and assume that if a given file was signed "
"by a trusted party, then it should not be malicious or negligently buggy. "
"The decision of whether to trust any given party is beyond the scope of "
"digital signatures. It's more of a sociological and political decision."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:37
#: bba375c5e6ce4129b7db14302ba15440
msgid ""
"Once we make the decision to trust certain parties, digital signatures are "
"useful, because they make it possible for us to limit our trust only to "
"those few parties we choose and not to worry about all the bad things that "
"can happen between us and them, e.g., server compromises (qubes-os.org will "
"surely be compromised one day, so [don't blindly trust the live version of "
"this site](/faq/#should-i-trust-this-website)), dishonest IT staff at the "
"hosting company, dishonest staff at the ISPs, Wi-Fi attacks, etc. We call "
"this philosophy [Distrusting the Infrastructure](/faq/#what-does-it-mean-to-"
"distrust-the-infrastructure)."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:47
#: 4bbea16533744c7ab7de4f692466ce5a
msgid ""
"By verifying all the files we download that purport to be authored by a "
"party we've chosen to trust, we eliminate concerns about the bad things "
"discussed above, since we can easily detect whether any files have been "
"tampered with (and subsequently choose to refrain from executing, "
"installing, or opening them)."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:53
#: 3fc4a5336102425292d3101e918db333
msgid ""
"However, for digital signatures to make any sense, we must ensure that the "
"public keys we use for signature verification are indeed the original ones. "
"Anybody can generate a GPG key pair that purports to belong to \"The Qubes "
"Project,\" but of course only the key pair that we (i.e., the Qubes "
"developers) generated is the legitimate one. The next section explains how "
"to verify the validity of the Qubes signing keys in the process of verifying"
" a Qubes ISO. (However, the same general principles apply to all cases in "
"which you may wish to verify a PGP signature, such as [verifying "
"repos](#how-to-verify-qubes-repos), not just verifying ISOs.)"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:63
#: ce216fa6771c4f81806b581cff7cef42
msgid "How to Verify Qubes ISO Signatures"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:65
#: 02efacc0a0a04ec280e4bb4887789174
msgid ""
"This section will guide you through the process of verifying a Qubes ISO by "
"checking its PGP signature. There are three basic steps in this process:"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:68
#: ../../_doc/project-security/verifying-signatures.md:477
#: 67507442c0db4a73923c7c92dbb98678 9331d974bdb64961ba075542e840b0d7
msgid ""
"[Get the Qubes Master Signing Key and verify its authenticity](#1-get-the-"
"qubes-master-signing-key-and-verify-its-authenticity)"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:70
#: ../../_doc/project-security/verifying-signatures.md:479
#: 5e393d7563a14cf49435737879dc94fe b7130f0227f8441fa40afc6d7b64dec2
msgid "[Get the Release Signing Key](#2-get-the-release-signing-key)"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:71
#: b3c1318f70d44b2c824c08fb366f8965
msgid "[Verify your Qubes ISO](#3-verify-your-qubes-iso)"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:73
#: 98081308d5ac4d93b274266049e96303
msgid ""
"If you run into any problems, please consult the [Troubleshooting "
"FAQ](#troubleshooting-faq) below."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:76
#: 2c617d38e6f744d2aa6386445c4c1948
msgid "Preparation"
msgstr "Vorbereitung"

#: ../../_doc/project-security/verifying-signatures.md:78
#: d40346d06837452c9a8f1df39fcc3c3c
msgid ""
"Before we begin, you'll need a program that can verify PGP signatures. Any "
"such program will do, but here are some examples for popular operating "
"systems:"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:81
#: cb71405447c64a2db9a5f5c99de7949d
msgid ""
"**Windows:** [Gpg4win](https://gpg4win.org/download.html) "
"([documentation](https://www.gpg4win.org/documentation.html)). Use the "
"Windows command line (`cmd.exe`) to enter commands."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:85
#: 772946ffc729452288bad50ac3acff6f
msgid ""
"**Mac:** [GPG Suite](https://gpgtools.org/) "
"([documentation](https://gpgtools.tenderapp.com/kb)). Open a terminal to "
"enter commands."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:89
#: 987e40f90aff430ab9551984c5c1d30b
msgid ""
"**Linux:** `gpg2` from your package manager or from "
"[gnupg.org](https://gnupg.org/download/index.html) "
"([documentation](https://www.gnupg.org/documentation/)). Open a terminal to "
"enter commands."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:94
#: 1e25f87188c74e6984e31e7610074b81
msgid ""
"The commands below will use `gpg2`, but if that doesn't work for you, try "
"`gpg` instead. If that still doesn't work, please consult the documentation "
"for your specific program (see links above)."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:98
#: c01984db83214c7197573fd5a06c1f7a
msgid "1. Get the Qubes Master Signing Key and verify its authenticity"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:100
#: a89201dd3fd44970b944cacff32b2d85
msgid ""
"Every file published by the Qubes Project (ISO, RPM, TGZ files and Git "
"repositories) is digitally signed by one of the developer keys or Release "
"Signing Keys. Each such key is signed by the [Qubes Master Signing "
"Key](https://keys.qubes-os.org/keys/qubes-master-signing-key.asc) "
"(`0xDDFA1A3E36879494`). The developer signing keys are set to expire after "
"one year, while the Qubes Master Signing Key and Release Signing Keys have "
"no expiration date. This Qubes Master Signing Key was generated on and is "
"kept only on a dedicated, air-gapped \"vault\" machine, and the private "
"portion will (hopefully) never leave this isolated machine."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:110
#: 075f9c91a44d410fbc70e75104b53b5c
msgid "There are several ways to get the Qubes Master Signing Key."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:112
#: d25227bcf59545d394dafa37b2721c45
msgid ""
"If you have access to an existing Qubes installation, it's available in "
"every VM ([except dom0](https://github.com/QubesOS/qubes-"
"issues/issues/2544)):"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:119
#: 8380b2b1d03e4d718cf914d39ccf272e
msgid ""
"If you're on Fedora, you can get it in the `distribution-gpg-keys` package:"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:125
#: c933d3c7b3124a9fba5633ede60fe86a
msgid "If youâ€™re on Debian, it may already be included in your keyring."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:127
#: ../../_doc/project-security/verifying-signatures.md:304
#: c420850e10414b87b2c788f2b838b5bc 38687e76d27641b88297b08ca8899cf6
msgid "Fetch it with GPG:"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:133
#: 5984625d1ab9465997ee6320fbdd52f9
msgid ""
"Download it as a [file](https://keys.qubes-os.org/keys/qubes-master-signing-"
"key.asc), then import it with GPG:"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:141
#: ab2cfba53fff4cee8220d9217e60c2c3
msgid ""
"Get it from a public "
"[keyserver](https://en.wikipedia.org/wiki/Key_server_%28cryptographic%29#Keyserver_examples)"
" (specified on first use with `--keyserver <URI>` along with keyserver "
"options to include key signatures), e.g.:"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:150
#: 142fe0f71eb34e46bab6f46679696c31
msgid ""
"The Qubes Master Signing Key is also available in the [Qubes Security "
"Pack](/security/pack/) and in the archives of the project's "
"[developer](https://groups.google.com/d/msg/qubes-"
"devel/RqR9WPxICwg/kaQwknZPDHkJ) and "
"[user](https://groups.google.com/d/msg/qubes-users/CLnB5uFu_YQ/ZjObBpz0S9UJ)"
" [mailing lists](/support/)."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:157
#: 117ddca6c2a847339b72461de9f1d6cc
msgid ""
"Once you have obtained the Qubes Master Signing Key, you must verify that it"
" is authentic rather than a forgery. Anyone can create a PGP key with the "
"name \"Qubes Master Signing Key,\" so you cannot rely on the name alone. You"
" also should not rely on any single website, not even over HTTPS."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:162
#: 36db9e0e54614bd49de31fa2c3af5192
msgid ""
"So, what *should* you do? One option is to use the PGP [Web of "
"Trust](https://en.wikipedia.org/wiki/Web_of_trust). In addition, some "
"operating systems include the means to acquire the Qubes Master Signing Key "
"in a secure way. For example, on Fedora, `dnf install distribution-gpg-keys`"
" will get you the Qubes Master Signing Key along with several other Qubes "
"keys. On Debian, your keyring may already contain the necessary keys."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:169
#: 23076d1dce194bb89ece40d07597a6f7
msgid ""
"Another option is to rely on the key's fingerprint. Every PGP key has a "
"fingerprint that uniquely identifies it among all PGP keys (viewable with "
"`gpg2 --fingerprint <KEY_ID>`). Therefore, if you know the genuine Qubes "
"Master Signing Key fingerprint, then you always have an easy way to confirm "
"whether any purported copy of it is authentic, simply by comparing the "
"fingerprints."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:175
#: af5f3f1f2d774cb0a950de6386e48bfa
msgid "For example, here is the Qubes Master Signing Key fingerprint:"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:183
#: bc527f8cd6534648a2638a05e68135c2
msgid ""
"But how do you know that this is the real fingerprint? After all, [this "
"website could be compromised](/faq/#should-i-trust-this-website), so the "
"fingerprint you see here may not be genuine. That's why we strongly suggest "
"obtaining the fingerprint from *multiple, independent sources in several "
"different ways*."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:188
#: 7fd9542914da4d669811eed0a3dd7eef
msgid "Here are some ideas for how to do that:"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:190
#: 151ba8712ae14f858e72556bc840f9e9
msgid ""
"Check the fingerprint on various websites (e.g., [mailing "
"lists](https://groups.google.com/g/qubes-"
"devel/c/RqR9WPxICwg/m/kaQwknZPDHkJ), [discussion forums](https://qubes-"
"os.discourse.group/t/there-is-no-way-to-validate-qubes-master-signing-"
"key/1441/9?u=adw), "
"[social](https://twitter.com/rootkovska/status/496976187491876864) "
"[media](https://www.reddit.com/r/Qubes/comments/5bme9n/fingerprint_verification/),"
" [personal websites](https://andrewdavidwong.com/fingerprints.txt))."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:197
#: b25258ffa0b04340a7abe1b7baea620b
msgid ""
"Check against PDFs, photographs, and videos in which the fingerprint appears"
" (e.g., [slides from a "
"talk](https://hyperelliptic.org/PSC/slides/psc2015_qubesos.pdf), on a "
"[T-shirt](https://twitter.com/legind/status/813847907858337793/photo/2), or "
"in the [recording of a presentation](https://youtu.be/S0TVw7U3MkE?t=2563))."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:202
#: b526824d323c4613a842229f1d1027cc
msgid ""
"Download old Qubes ISOs from different sources and check the included Qubes "
"Master Signing Key."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:204
#: 6edf9a4d71c84b568b06848df390cc03
msgid ""
"Ask people to post the fingerprint on various mailing lists, forums, and "
"chat rooms."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:206
#: 7a27aafb2cb74cd9a3811e8b84a5b398
msgid "Repeat the above over Tor."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:207
#: be4047037fdc4b3db6b6994e382fe09c
msgid "Repeat the above over various VPNs and proxy servers."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:208
#: 197e50fa62ec4fd2adbc704587f648c3
msgid ""
"Repeat the above on different networks (work, school, internet cafe, etc.)."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:209
#: 3a28d5ef474b4794bc5810ff541cf016
msgid ""
"Text, email, call, video chat, snail mail, or meet up with people you know "
"to confirm the fingerprint."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:211
#: e25f0cf99b1b4cfc81489f28410e667f
msgid "Repeat the above from different computers and devices."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:213
#: 1f4f6b8a8c1547ca9f1092d1498564e8
msgid ""
"Once you've obtained the fingerprint from enough independent sources in "
"enough different ways that you feel confident that you know the genuine "
"fingerprint, keep it in a safe place. Every time you need to check whether a"
" key claiming to be the Qubes Master Signing Key is authentic, compare that "
"key's fingerprint to your trusted copy and confirm they match."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:219
#: b42c940e81784b2495399f8a3b85d9da
msgid ""
"Now that you've imported the authentic Qubes Master Signing Key, set its "
"trust level to \"ultimate\" so that it can be used to automatically verify "
"all the keys signed by the Qubes Master Signing Key (in particular, Release "
"Signing Keys)."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:264
#: 77dcb6d2d90b4e469526b36fdf43a078
msgid ""
"Now, when you import any of the legitimate Qubes developer keys and Release "
"Signing Keys used to sign ISOs, RPMs, TGZs, Git tags, and Git commits, they "
"will already be trusted in virtue of being signed by the Qubes Master "
"Signing Key."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:269
#: 46b98ee942f444feae377c5ddc0b9678
msgid ""
"Before proceeding to the next step, make sure the Qubes Master Signing Key "
"is in your keyring with the correct trust level. (Note: We have already "
"verified the authenticity of the key, so this final check is not about "
"security. Rather, it's just a sanity check to make sure that we've imported "
"the key into our keyring correctly.)"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:282
#: 74bc55e4ae2948d09ed05aa5d64c5d62
msgid ""
"If you don't see the Qubes Master Signing Key here with a trust level of "
"\"ultimate,\" go back and follow the instructions in this section carefully."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:285
#: 117e1b6bf5424ab19724a8826ae5e30a
msgid "2. Get the Release Signing Key"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:287
#: 39bf5649ddd14f629e541af3e21905b4
msgid ""
"The filename of the Release Signing Key for your version is usually `qubes-"
"release-X-signing-key.asc`, where `X` is the major version number of your "
"Qubes release. There are several ways to get the Release Signing Key for "
"your Qubes release."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:292
#: e7788f998a2d4f66b2b0db33e04423a9
msgid ""
"If you have access to an existing Qubes installation, the release keys are "
"available in dom0 in `/etc/pki/rpm-gpg/RPM-GPG-KEY-qubes-*`. These can be "
"[copied](/doc/how-to-copy-from-dom0/#copying-from-dom0) into other VMs for "
"further use. In addition, every other VM contains the release key "
"corresponding to that installation's release in `/etc/pki/rpm-gpg/RPM-GPG-"
"KEY-qubes-*`. If you wish to use one of these keys, make sure to import it "
"into your keyring, e.g.:"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:310
#: c793c88c22d64702a43574b4a5bdf339
msgid ""
"Download it as a file. You can find the Release Signing Key for your Qubes "
"version on the [Downloads](/downloads/) page. You can also download all the "
"currently used developers' signing keys, Release Signing Keys, and the Qubes"
" Master Signing Key from the [Qubes Security Pack](/security/pack/) and the "
"[Qubes OS Keyserver](https://keys.qubes-os.org/keys/). Once you've "
"downloaded your Release Signing Key, import it with GPG:"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:321
#: 9be4fb0901894e36a52cd0c09cee2eb4
msgid ""
"The Release Signing Key should be signed by the Qubes Master Signing Key:"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:334
#: 93e8af6d0c15411bab66c2a68de2eda8
msgid ""
"This is just an example, so the output you receive will not look exactly the"
" same. What matters is the line that shows that this key is signed by the "
"Qubes Master Signing Key with a `sig!` prefix. This verifies the "
"authenticity of the Release Signing Key. Note that the `!` flag after the "
"`sig` tag is important because it means that the key signature is valid. A "
"`sig-` prefix would indicate a bad signature and `sig%` would mean that gpg "
"encountered an error while verifying the signature. It is not necessary to "
"independently verify the authenticity of the Release Signing Key, since you "
"already verified the authenticity of the Qubes Master Signing Key. Before "
"proceeding to the next step, make sure the Release Signing Key is in your "
"keyring:"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:352
#: 7466b57d93a74323a3684757ab1507a8
msgid ""
"If you don't see the correct Release Signing Key here, go back and follow "
"the instructions in this section carefully."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:355
#: 23e1ba87a5914b9f9960f6c35ad14773
msgid "3. Verify your Qubes ISO"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:357
#: 0ab304f331f648979023a18bd83f60b2
msgid ""
"Every Qubes ISO is released with a detached PGP signature file, which you "
"can find on the [Downloads](/downloads/) page alongside the ISO. If the "
"filename of your ISO is `Qubes-RX-x86_64.iso`, then the name of the "
"signature file for that ISO is `Qubes-RX-x86_64.iso.asc`, where `X` is a "
"specific version of Qubes. The signature filename is always the same as the "
"ISO filename followed by `.asc`."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:363
#: 0a613100f58441f48da1728f0d2f807a
msgid ""
"Download both the ISO and its signature file. Put both of them in the same "
"directory, then navigate to that directory. Now, you can verify the ISO by "
"executing this GPG command in the directory that contains both files:"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:376
#: 9435e191f12c4fec9a0c5948b65d96e9
msgid ""
"This is just an example, so the output you receive will not look exactly the"
" same. What matters is the line that says `Good signature from \"Qubes OS "
"Release X Signing Key\"`. This confirms that the signature on the ISO is "
"good."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:380
#: 087d6a6f93d14f40b203288a7bc1f557
msgid "How to Verify Qubes ISO Digests"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:382
#: 9c343673d9bf454fb69e6476fdafc4b8
msgid ""
"Each Qubes ISO is also accompanied by a plain text file ending in "
"`.DIGESTS`. This file contains the output of running several different "
"cryptographic hash functions on the ISO in order to obtain alphanumeric "
"outputs known as \"digests\" or \"hash values.\" These hash values are "
"provided as an alternative verification method to PGP signatures (though the"
" digest file is itself also PGP-signed --- see below). If you've already "
"verified the signatures on the ISO directly, then verifying digests is not "
"necessary. You can find the `.DIGESTS` for your ISO on the "
"[Downloads](/downloads/) page, and you can always find all the digest files "
"for every Qubes ISO in the [Qubes Security Pack](/security/pack/)."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:392
#: 532d591d5cba42bbb70618067564524c
msgid ""
"If the filename of your ISO is `Qubes-RX-x86_64.iso`, then the name of the "
"digest file for that ISO is `Qubes-RX-x86_64.iso.DIGESTS`, where `X` is a "
"specific version of Qubes. The digest filename is always the same as the ISO"
" filename followed by `.DIGESTS`. Since the digest file is a plain text "
"file, you can open it with any text editor. Inside, you should find text "
"that looks similar to this:"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:426
#: 747c8152efd94d1f8720ee6be53bcdf1
msgid ""
"Four digests have been computed for this ISO. The hash functions used, in "
"order from top to bottom, are MD5, SHA1, SHA256, and SHA512. One way to "
"verify that the ISO you downloaded matches any of these hash values is by "
"using the respective `*sum` programs:"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:446
#: f3181a0d65fc4a6f8ae50e85b77aa6a0
msgid ""
"The `OK` response tells us that the hash value for that particular hash "
"function matches. The program also warns us that there are 23 improperly "
"formatted lines, but this is to be expected. This is because each file "
"contains lines for several different hash values (as mentioned above), but "
"each `*sum` program verifies only the line for its own hash function. In "
"addition, there are lines for the PGP signature that the `*sum` programs do "
"not know how to read. Therefore, it is safe to ignore these warning lines."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:454
#: 70cdf563c1e1450b8136200a4840b396
msgid ""
"Another way is to use `openssl` to compute each hash value, then compare "
"them to the contents of the digest file.:"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:468
#: 5229121b54664b28a8ee2fe1f222a480
msgid "(Notice that the outputs match the values from the digest file.)"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:470
#: ac0872386f0c4af49ad6756567eadae8
msgid ""
"However, it is possible that an attacker replaced `Qubes-RX-x86_64.iso` with"
" a malicious ISO, computed the hash values for that malicious ISO, and "
"replaced the values in `Qubes-RX-x86_64.iso.DIGESTS` with his own set of "
"values. Therefore, we should also verify the authenticity of the listed hash"
" values. Since `Qubes-RX-x86_64.iso.DIGESTS` is a clearsigned PGP file, we "
"can use GPG to verify it from the command line:"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:480
#: 2024701f97724c4d83090450a0b6435b
msgid "Verify the signature in the digest file:"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:493
#: 63fc4975fb8742efa3792f4bba53d815
msgid ""
"The signature is good. If our copy of the `Qubes OS Release X Signing Key` "
"is being validated by the authentic Qubes Master Signing Key (see "
"[above](#1-get-the-qubes-master-signing-key-and-verify-its-authenticity)), "
"we can be confident that these hash values came from the Qubes devs."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:498
#: 3541d84f5f1e41f49280408584032cf9
msgid "How to Verify Qubes Repos"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:500
#: 17df22d589904cbe97cfb80b93eae38d
msgid ""
"Whenever you use one of the [Qubes "
"repositories](https://github.com/QubesOS), you should verify the PGP "
"signature in a tag on the latest commit or on the latest commit itself. (One"
" or both may be present, but only one is required.) If there is no trusted "
"signed tag or commit on top, any commits after the latest trusted signed tag"
" or commit should **not** be trusted. If you come across a repo with any "
"unsigned commits, you should not add any of your own signed tags or commits "
"on top of them unless you personally vouch for the trustworthiness of the "
"unsigned commits. Instead, ask the person who pushed the unsigned commits to"
" sign them."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:510
#: 9983ebfadc6c4dd29838299e1f4acff5
msgid "To verify a signature on a Git tag:"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:516
#: ../../_doc/project-security/verifying-signatures.md:528
#: 5224b0162b6447019532253504e70fcb ddf92b1374eb45a7b982ac02ae68d1ed
msgid "or"
msgstr "oder"

#: ../../_doc/project-security/verifying-signatures.md:522
#: 86cfc8f727754ef0a275b418c9355f84
msgid "To verify a signature on a Git commit:"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:534
#: 8c82e57712bf4b8498e822ca72c57a0a
msgid ""
"You should always perform this verification on a trusted local machine with "
"properly validated keys (which are available in the [Qubes Security "
"Pack](/security/pack/)) rather than relying on a third party, such as "
"GitHub. While the GitHub interface may claim that a commit has a verified "
"signature from a member of the Qubes team, this is only trustworthy if "
"GitHub has performed the signature check correctly, the account identity is "
"authentic, the user's key has not been replaced by an admin, GitHub's "
"servers have not been compromised, and so on. Since there's no way for you "
"to be certain that all such conditions hold, you're much better off "
"verifying signatures yourself."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:544
#: 3d10848c6b9049698ec87e68749bfaf2
msgid ""
"Also see: [Distrusting the Infrastructure](/faq/#what-does-it-mean-to-"
"distrust-the-infrastructure)"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:547
#: a45ed6b0a0044030a94158ae2a0226a5
msgid "Troubleshooting FAQ"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:549
#: 857591762dd946d09d425bce8e81efa0
msgid "Why am I getting \"Can't check signature: public key not found\"?"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:551
#: 5cc2a6b1db574693aae68c54bc662aaf
msgid ""
"You don't have the correct [Release Signing Key](#2-get-the-release-signing-"
"key)."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:554
#: f71c27dae9a340208eef8c39256f62e7
msgid "Why am I getting \"BAD signature from 'Qubes OS Release X Signing Key'\"?"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:556
#: cb8742f778b74bd2b2e4b239c14bafad
msgid "The problem could be one or more of the following:"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:558
#: 939543d51be64c91adf55693f21504f7
msgid ""
"You're trying to verify the wrong file(s). Read this page again carefully."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:559
#: 5fafa814586b4be2b80d6d6e0e92c3b4
msgid ""
"You're using the wrong GPG command. Follow the examples in [Verify your "
"Qubes ISO](#3-verify-your-qubes-iso) carefully."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:561
#: 66a5d8bee4f84ef1b7f60bf16bcf0773
msgid ""
"The ISO or [signature file](#3-verify-your-qubes-iso) is bad (e.g., "
"incomplete or corrupt download). Try downloading the signature file again "
"from a different source, then try verifying again. If you still get the same"
" result, try downloading the ISO again from a different source, then try "
"verifying again."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:567
#: 281665fe61084f428e6297616b2d12fa
msgid "Why am I getting \"bash: gpg2: command not found\"?"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:569
#: 41b19b3c1a9f41bdaee81eba95deec08
msgid ""
"You don't have `gpg2` installed. Please install it using the method "
"appropriate for your environment (e.g., via your package manager)."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:572
#: 8b4ba1fb700b48a8876e555cf9c229fe
msgid "Why am I getting \"No such file or directory\"?"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:574
#: 741c3d633e8244f9a0ce8958e6a063f6
msgid ""
"Your working directory does not contain the required files. Go back and "
"follow the instructions more carefully, making sure that you put all "
"required files in the same directory *and* navigate to that directory."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:578
#: e5574a5436f54179a124a42f6e119ecd
msgid ""
"Why am I getting \"can't open signed data `Qubes-RX-x86_64.iso' / can't hash"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:579
#: 8616217f2c88478e8fcc53056e976e8e
msgid "datafile: file open error\"?"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:581
#: ../../_doc/project-security/verifying-signatures.md:653
#: 6cd4723c23754c92afb5b02b8ce34021 ffea4ad460584a0a9160e389af52803b
msgid "The correct ISO is not in your working directory."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:583
#: bdb3905b07a24fb68d3e0317b9b36df4
msgid ""
"Why am I getting \"can't open `Qubes-RX-x86_64.iso.asc' / verify signatures"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:584
#: 0275426d354745e59fea63915aaf8a91
msgid "failed: file open error\"?"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:586
#: c7690c08882c4de28ebb75f2276ea49e
msgid ""
"The correct [signature file](#3-verify-your-qubes-iso) is not in your "
"working directory."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:589
#: aad0bc8a73f0475b85627f0c02122fa8
msgid "Why am I getting \"no valid OpenPGP data found\"?"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:591
#: f2158b518c214c599c26f3f3be0f5a85
msgid ""
"Either you don't have the correct [signature file](#3-verify-your-qubes-"
"iso), or you inverted the arguments to `gpg2`. ([The signature file goes "
"first.](#3-verify-your-qubes-iso))"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:595
#: 1b1c0abfe8ad432e8e455d8b9454e436
msgid "Why am I getting \"WARNING: This key is not certified with a trusted"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:596
#: 751bbd4a998143aeb7b979b9c966467b
msgid ""
"signature! There is no indication that the signature belongs to the "
"owner.\"?"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:598
#: d7fe9255d89740a7a89a032e03560c21
msgid ""
"Either you don't have the [Qubes Master Signing Key](#1-get-the-qubes-"
"master-signing-key-and-verify-its-authenticity), or you didn't [set its "
"trust level correctly](#1-get-the-qubes-master-signing-key-and-verify-its-"
"authenticity)."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:603
#: a8ff2ea9f8544cc6995797e01589f90c
msgid "Why am I getting \"X signature not checked due to a missing key\"?"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:605
#: a8f94f7a63b346f0a05e0613a3f3c936
msgid ""
"You don't have the keys that created those signatures in your keyring. For "
"present purposes, you don't need them as long as you have the [Qubes Master "
"Signing Key](#1-get-the-qubes-master-signing-key-and-verify-its-"
"authenticity) and the [Release Signing Key](#2-get-the-release-signing-key) "
"for your Qubes version."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:611
#: ec48c75b2aef4860a2d8004c09f41a6f
msgid ""
"Why am I seeing additional signatures on a key with \"[User ID not found]\""
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:612
#: 5cc88308dc7c49c69df42a5e816f4729
msgid "or from a revoked key?"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:614
#: f26e77acafb04e9886eda7dec66187b1
msgid ""
"This is just a basic part of how OpenPGP works. Anyone can sign anyone "
"else's public key and upload the signed public key to keyservers. Everyone "
"is also free to revoke their own keys at any time (assuming they possess or "
"can create a revocation certificate). This has no impact on verifying Qubes "
"ISOs, code, or keys."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:620
#: 6f05ae54d64443aaac34f04fd2600666
msgid "Why am I getting \"verify signatures failed: unexpected data\"?"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:622
#: ../../_doc/project-security/verifying-signatures.md:627
#: 5a85311b76354b3ba8dfbe914c0c84c1 51213472c3f348a98e1b2193e4b7cafd
msgid ""
"You're not verifying against the correct [signature file](#3-verify-your-"
"qubes-iso)."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:625
#: 004818e8ee3a4b96bb0898c5a26a4543
msgid "Why am I getting \"not a detached signature\"?"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:630
#: b76bbe39ac1644029134bc7ec94fb7aa
msgid "Why am I getting \"CRC error; [...] no signature found [...]\"?"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:632
#: 0d8341fe78a1471a8abcfdfd0793682e
msgid ""
"You're not verifying against the correct [signature file](#3-verify-your-"
"qubes-iso), or the signature file has been modified. Try downloading it "
"again or from a different source."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:636
#: 913f0674b5d1445cb5f9e497ac47e767
msgid "Do I have to verify the ISO against both the [signature"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:637
#: ec7b30942ab04a14819e635c8e960f68
msgid ""
"file](#3-verify-your-qubes-iso) and the [digest file](#how-to-verify-qubes-"
"iso-digests)?"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:640
#: 4d16e35f67714f2ca6e09e7848c42053
msgid "No, either method is sufficient by itself."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:642
#: 4ec86aea5ac24966bc41476ff63cfe24
msgid "Why am I getting \"no properly formatted X checksum lines found\"?"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:644
#: ea5a0a73ae3b4733940f0f7874082971
msgid ""
"You're not checking the correct [digest file](#how-to-verify-qubes-iso-"
"digests)."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:647
#: c0a3a2668daf428ca0d72bbfbbb3000c
msgid "Why am I getting \"WARNING: X lines are improperly formatted\"?"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:649
#: 2bbf66d6ca4844caa57ddb55891a0ce7
msgid ""
"Read [How to Verify Qubes ISO Digests](#how-to-verify-qubes-iso-digests) "
"again."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:651
#: 0d2b9ca36f7c4df7b76af7bd3435d1f0
msgid "Why am I getting \"WARNING: 1 listed file could not be read\"?"
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:655
#: c221dfdfe1124fbe958fb70a887a3449
msgid "I have another problem that isn't mentioned here."
msgstr ""

#: ../../_doc/project-security/verifying-signatures.md:657
#: 544da4c88fb043c9bc32f83ba14a32c2
msgid ""
"Carefully read this page again to be certain that you didn't skip any steps."
" In particular, make sure you have the [Qubes Master Signing Key](#1-get-"
"the-qubes-master-signing-key-and-verify-its-authenticity), the [Release "
"Signing Key](#2-get-the-release-signing-key), *and* the [signature "
"file](#3-verify-your-qubes-iso) and/or [digest file](#how-to-verify-qubes-"
"iso-digests) all for the *correct* Qubes OS version. If your question is "
"about GPG, please see the [GPG "
"documentation](https://www.gnupg.org/documentation/). Still have question? "
"Please see [Help, Support, Mailing Lists, and Forum](/support/) for places "
"where you can ask!"
msgstr ""
